"use strict";(self.webpackChunkdatta_able_rv18_0_4=self.webpackChunkdatta_able_rv18_0_4||[]).push([[653],{76653:(e,t,a)=>{a.r(t),a.d(t,{City:()=>m,default:()=>w});var o=a(72791),i=a(74387),n=a(50649),s=a.n(n),d=a(17451),r=a(55294),l=a(80134),h=a(85797),c=a(65410),p=a.n(c),u=a(80184);class m extends o.Component{constructor(e){super(e),this.componentDidMount=e=>{r.Z.all([r.Z.get("http://20.201.121.161:4478/api/City",{headers:{Authorization:"Bearer "+localStorage.getItem("token")}})]).then(r.Z.spread((e=>{this.setState({jCity:e.data})}))).catch((e=>console.log(e)))},this.onIDValidation=e=>new Promise(((t,a)=>{r.Z.get("/api/sub-master/defect-type-exist",{params:{AutoID:e.newData.AutoID?e.newData.AutoID:0,Code:e.newData.MSCode,Name:e.newData.MSName}}).then((e=>{t(1===e.data[0].Exist)})).catch((e=>{console.log(e)}))})),this.onRowValidating=async e=>{if(e.isValid){if(this.ValidationCheck)return e.isValid=!0,void(this.ValidationCheck=!1);if(e.isValid=!1,await this.onIDValidation(e))return e.isValid=!1,void this.OnNotification("Code or Name already exists","error");(0,l.confirm)("Want to save this record?","Confirmation").done((t=>{t?(this.ValidationCheck=!0,e.component.saveEditData()):e.component.cancelEditData()}))}},this.OnNotification=(e,t)=>{p()({message:e,type:t,displayTime:3e3,position:{at:"top right",offset:"50"}})},this.state={jCity:[],DocReadOnly:!1},this.Status=[{ID:1,Name:"Active"},{ID:0,Name:"Inactive"}],this.Province=[{ID:1,Name:"Central"},{ID:2,Name:"Eastern"},{ID:3,Name:"North Central"},{ID:4,Name:"Northern"},{ID:5,Name:"North Western"},{ID:6,Name:"Sabaragamuwa"},{ID:7,Name:"Southern"},{ID:8,Name:"Uva"},{ID:9,Name:"Western"}],this.ValidationCheck=!1,this.onRowInserted=this.onRowInserted.bind(this),this.onRowUpdated=this.onRowUpdated.bind(this),this.onRowRemoved=this.onRowRemoved.bind(this)}onRowInserted(e){e.data.id=0,console.log(e.data),this.serverRequest=r.Z.post("http://20.201.121.161:4478/api/City",e.data,{headers:{Authorization:"Bearer "+localStorage.getItem("token")}}).then((e=>{console.log(e)})).catch((e=>{console.log(e)}))}onRowUpdated(e){this.serverRequest=r.Z.put("/api/sub-master/update-defect-types",e.data).then((e=>{console.log(e.data)})).catch((e=>{console.log(e)}))}onRowRemoved(e){this.serverRequest=r.Z.delete("/api/sub-master/remove-defect-types/".concat(e.data.AutoID)).then((e=>{console.log(e.data)})).catch((e=>{console.log(e)}))}onInitNewRow(e){}render(){return(0,u.jsx)(i.Z,{children:(0,u.jsx)(d.Z,{title:"City",children:(0,u.jsxs)(s(),{id:"grid-defect-types",keyExpr:"id",dataSource:this.state.jCity,allowColumnReordering:!0,onRowInserted:this.onRowInserted,onInitNewRow:this.onInitNewRow,showBorders:!0,wordWrapEnabled:!0,allowSearch:!0,showColumnLines:!0,showRowLines:!1,rowAlternationEnabled:!0,children:[(0,u.jsx)(n.Editing,{mode:"popup",useIcons:!0,allowUpdating:!this.state.DocReadOnly,allowDeleting:!this.state.DocReadOnly,allowAdding:!this.state.DocReadOnly,children:(0,u.jsx)(n.Popup,{title:"City",showTitle:!0})}),(0,u.jsx)(n.SearchPanel,{visible:!0,placeholder:"Search..."}),(0,u.jsx)(n.Column,{dataField:"id",editorOptions:{maxLength:50}}),(0,u.jsx)(n.Column,{dataField:"name",editorOptions:{maxLength:50},children:(0,u.jsx)(n.RequiredRule,{})}),(0,u.jsxs)(n.Column,{dataField:"provinceId",children:[(0,u.jsx)(n.Lookup,{dataSource:this.Province,valueExpr:"ID",displayExpr:"Name"}),(0,u.jsx)(n.RequiredRule,{})]})]})})})}}const w=(0,h.$j)((e=>(console.log(e.loggedReducer),{data:e.loggedReducer})))(m)}}]);
//# sourceMappingURL=653.109e11e5.chunk.js.map