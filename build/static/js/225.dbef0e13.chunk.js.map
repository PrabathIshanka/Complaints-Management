{"version":3,"file":"static/js/225.dbef0e13.chunk.js","mappings":"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","sources":["Forms/Admin/ReportSetup.jsx"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Lookup,\r\n  GroupPanel,\r\n  SearchPanel,\r\n  Grouping,\r\n  Paging,\r\n} from \"devextreme-react/data-grid\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport List from \"./ReportUpload\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class ReportSetup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      jLayoutList: [],\r\n      jlSchool: [],\r\n      jlMainModule: [],\r\n      jlSubModule: [],\r\n      jlCategory: [],\r\n      jlParameter: [],\r\n      jLayout: {},\r\n      jParameter: [],\r\n      jParameterList: [],\r\n\r\n      jLayoutUpdate: false,\r\n      DocReadOnly: false,\r\n    };\r\n\r\n    this.Status = [\r\n      { ID: 1, Name: \"Yes\" },\r\n      { ID: 0, Name: \"No\" },\r\n    ];\r\n\r\n    this.LayoutRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let auth = false;\r\n    Promise.all([\r\n      axios.get(\"/api/school-lookup-byLoginUser\", {\r\n        params: {\r\n          UserID: this.props.data.user.Id,\r\n        },\r\n      }),\r\n      axios.get(\"/api/module-main\"),\r\n      axios.get(\"/api/module-sub\"),\r\n      axios.get(\"/api/report-layout-list\", {\r\n        params: {\r\n          UserID: this.props.data.user.Id,\r\n        },\r\n      }),\r\n      axios.get(\"/api/report-category-list\"),\r\n      axios.get(\"/api/report-parameter-lookup\"),\r\n    ])\r\n      .then(\r\n        ([School, MainModule, SubModule, LayoutList, Category, Parameter]) => {\r\n          this.setState({\r\n            jlSchool: School.data,\r\n            jlMainModule: MainModule.data,\r\n            jlCategory: Category.data,\r\n            jLayoutList: JSON.parse(LayoutList.data[0].List),\r\n            jlParameter: Parameter.data,\r\n            jParameterList: JSON.parse(LayoutList.data[0].ListParameter),\r\n            DocReadOnly: auth,\r\n          });\r\n        }\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onUploadVisible = (e) => {\r\n    return !e.row.isEditing;\r\n  };\r\n\r\n  onUploadClick = (e) => {\r\n    if (!this.state.jLayoutUpdate) {\r\n      this.setState(\r\n        {\r\n          jLayout: e.row.data,\r\n        },\r\n        () => {\r\n          let jParameterListTemp = [...this.state.jParameterList];\r\n          jParameterListTemp = jParameterListTemp\r\n            .filter((o) => o.ReportID == e.row.data.AutoID)\r\n            .map((a) => {\r\n              return a;\r\n            });\r\n\r\n          this.setState(\r\n            {\r\n              jParameter: jParameterListTemp,\r\n            },\r\n            () => {\r\n              // this.LayoutRef.current.onModuleValueChanged({\r\n              //   value: e.row.data.MainModule,\r\n              // });\r\n              this.setState({ jLayoutUpdate: true });\r\n            }\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({ jLayout: {}, jLayoutUpdate: false }, () => {\r\n        if (e === 1) {\r\n          axios\r\n            .get(\"/api/report-layout-list\", {\r\n              params: {\r\n                UserID: this.props.data.user.Id,\r\n              },\r\n            })\r\n            .then((res) => {\r\n              this.setState({ jLayoutList: JSON.parse(res.data[0].List) });\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  OnToolbarPreparing = (e) => {\r\n    let toolbarItems = e.toolbarOptions.items;\r\n\r\n    toolbarItems.push({\r\n      location: \"after\",\r\n      widget: \"dxButton\",\r\n      options: {\r\n        icon: \"add\",\r\n        onClick: (e) => {\r\n          this.setState({ jLayoutUpdate: !this.state.jLayoutUpdate });\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  onRowRemoved(e) {\r\n    axios\r\n      .delete(`/api/report/${e.data.AutoID}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axios\r\n      .get(\"/api/file-delete\", {\r\n        params: { Folder: \"layout\", FileName: e.data.FileName },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onGradeMoveClick = (e, t) => {\r\n    let list = this.state.jlParameter.filter(\r\n      (item) => item.IndexNo !== e.row.rowIndex + 1\r\n    );\r\n\r\n    let add = this.state.jlParameter.filter(\r\n      (item) => item.IndexNo === e.row.rowIndex + 1\r\n    );\r\n\r\n    list.splice(\r\n      t === \"Up\"\r\n        ? e.row.rowIndex === 0\r\n          ? 0\r\n          : e.row.rowIndex - 1\r\n        : e.row.rowIndex + 1,\r\n      0,\r\n      add[0]\r\n    );\r\n\r\n    list.map((value, index, array) => {\r\n      list[index].IndexNo = index + 1;\r\n    });\r\n\r\n    this.setState({ jlParameter: list });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Card title=\"Report Layout Setup\">\r\n          <DataGrid\r\n            id=\"grid-layout\"\r\n            keyExpr=\"AutoID\"\r\n            showBorders={true}\r\n            dataSource={this.state.jLayoutList}\r\n            onToolbarPreparing={this.OnToolbarPreparing}\r\n            onRowRemoved={this.onRowRemoved}\r\n          >\r\n            <GroupPanel visible={true} />\r\n            <SearchPanel visible={true} />\r\n            <Grouping autoExpandAll={true} />\r\n            <Paging defaultPageSize={100} />\r\n            <Editing\r\n              mode=\"popup\"\r\n              allowDeleting={!this.state.DocReadOnly}\r\n              useIcons={true}\r\n            >\r\n              <Popup title=\"Layout\" showTitle={true}></Popup>\r\n            </Editing>\r\n\r\n            <Column dataField=\"CategoryID\" caption=\"Category\">\r\n              <Lookup\r\n                dataSource={this.state.jlCategory}\r\n                displayExpr=\"Name\"\r\n                valueExpr=\"AutoID\"\r\n              />\r\n            </Column>\r\n            <Column dataField=\"Name\" />\r\n            <Column dataField=\"Status\">\r\n              <Lookup\r\n                dataSource={this.Status}\r\n                displayExpr=\"Name\"\r\n                valueExpr=\"ID\"\r\n              />\r\n            </Column>\r\n\r\n            <Column\r\n              type=\"buttons\"\r\n              buttons={[\r\n                \"edit\",\r\n                {\r\n                  hint: \"Upload\",\r\n                  icon: \"upload\",\r\n                  visible: this.onUploadVisible,\r\n                  onClick: this.onUploadClick,\r\n                },\r\n                \"delete\",\r\n              ]}\r\n            />\r\n          </DataGrid>\r\n        </Card>\r\n\r\n        <List\r\n          ref={this.LayoutRef}\r\n          Show={this.state.jLayoutUpdate}\r\n          OnHide={this.onUploadClick}\r\n          FileInfo={this.state.jLayout}\r\n          ParameterList={this.state.jParameter}\r\n          MainModule={this.state.jlMainModule}\r\n          SubModule={this.state.jlSubModule}\r\n          School={this.state.jlSchool}\r\n          Category={this.state.jlCategory}\r\n          Parameter={this.state.jlParameter}\r\n          onGradeMoveClick={this.onGradeMoveClick}\r\n        ></List>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.loggedReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ReportSetup);\r\n"],"names":["ReportSetup","Component","constructor","props","super","onUploadVisible","e","row","isEditing","onUploadClick","this","state","jLayoutUpdate","setState","jLayout","axios","get","params","UserID","data","user","Id","then","res","jLayoutList","JSON","parse","List","catch","error","console","log","jParameterListTemp","jParameterList","filter","o","ReportID","AutoID","map","a","jParameter","OnToolbarPreparing","toolbarOptions","items","push","location","widget","options","icon","onClick","onGradeMoveClick","t","list","jlParameter","item","IndexNo","rowIndex","add","splice","value","index","array","jlSchool","jlMainModule","jlSubModule","jlCategory","DocReadOnly","Status","ID","Name","LayoutRef","React","componentDidMount","Promise","all","_ref","School","MainModule","SubModule","LayoutList","Category","Parameter","ListParameter","onRowRemoved","delete","concat","response","Folder","FileName","render","_jsxs","Fragment","children","_jsx","Card","title","DataGrid","id","keyExpr","showBorders","dataSource","onToolbarPreparing","GroupPanel","visible","SearchPanel","Grouping","autoExpandAll","Paging","defaultPageSize","Editing","mode","allowDeleting","useIcons","Popup","showTitle","Column","dataField","caption","Lookup","displayExpr","valueExpr","type","buttons","hint","ref","Show","OnHide","FileInfo","ParameterList","connect","loggedReducer"],"sourceRoot":""}