{"version":3,"file":"static/js/289.dd3e74b8.chunk.js","mappings":"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","sources":["App/components/MainCard.js","Forms/Feedback/ComplainOEnquiryList.jsx","Forms/Feedback/ComplainOEnquiry.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body>{this.props.children}</Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging,\r\n} from \"devextreme-react/data-grid\";\r\n\r\nexport class ComplainOEnquiryList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewListSelectedID: 0,\r\n      ComplainInquiryList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() { \r\n    console.log();\r\n  }\r\n\r\n  onSelectionChanged = (e) => {\r\n    this.setState({ viewListSelectedID: e.selectedRowsData[0].AutoID });\r\n  };\r\n\r\n  onSelectClick = (e) => {\r\n    this.props.OnHide(this.state.viewListSelectedID);\r\n  };\r\n\r\n  onCloseClick = (e) => {\r\n    this.props.OnHide(0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          size=\"xl\"\r\n          show={this.props.Show}\r\n          onHide={this.onCloseClick}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>List of Complains/Inquiries</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              dataSource={this.props.ComplainInquiryList}\r\n              keyExpr=\"AutoID\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              onSelectionChanged={this.onSelectionChanged}\r\n            >\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={12} />\r\n              <Column dataField=\"AutoID\" visible={false} />\r\n              <Column dataField=\"ComplainNo\" />\r\n              <Column dataField=\"PriorityLevel\" />\r\n              <Column dataField=\"ComplainType\" />\r\n              <Column dataField=\"ComplainStatus\" />\r\n            </DataGrid>\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <Button variant=\"dark\" onClick={this.onSelectClick}>\r\n              Open\r\n            </Button>\r\n            <Button\r\n              variant=\"dark\"\r\n              onClick={this.onCloseClick}\r\n              icon=\"feather icon-layers\"\r\n            >\r\n              Close\r\n            </Button>\r\n            \r\n          </Modal.Body>\r\n        </Modal>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComplainOEnquiryList","import Form, { Item, GroupItem, Label } from \"devextreme-react/form\";\r\nimport React, { Component } from \"react\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport List from \"./ComplainOEnquiryList\";\r\nimport { LoadPanel } from \"devextreme-react\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging,\r\n  Editing,\r\n  Lookup,\r\n  Popup,\r\n} from \"devextreme-react/data-grid\";\r\n\r\nimport { FileUploader } from \"devextreme-react\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport UploadAttchment from \"../UploadAttachmentTemplate/UploadAttchment\";\r\n\r\nexport class ComplainOEnquiry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ComplainID: 0,\r\n      jComplain: {},\r\n\r\n      jlDefectTypes: [],\r\n      jlCustomers: [],\r\n      jlArea: [],\r\n      jlUser: [],\r\n      jlBank: [],\r\n      jlCategory: [],\r\n      jlItem: [],\r\n      jComplainAttachment: [],\r\n      UploadAttchment: false,\r\n      FileInfo: {},\r\n\r\n      SelectedID: 0,\r\n      ComplainInquiryList: [],\r\n      LoadPanelVisible: false,\r\n      ListViewing: false,\r\n      DocumentID: 5001,\r\n      jComplainAction: [],\r\n    };\r\n\r\n    this.Status = [\r\n      { ID: 1, Name: \"Complain\" },\r\n      { ID: 2, Name: \"Inquiry\" },\r\n      { ID: 3, Name: \"Feedback\" },\r\n    ];\r\n    this.Status01 = [\r\n      { ID: 1, Name: \"Active\" },\r\n      { ID: 2, Name: \"Inactive\" },\r\n      { ID: 3, Name: \"Completed\" },\r\n    ];\r\n    this.PriorityLevel = [\r\n      { ID: 1, Name: \"High\" },\r\n      { ID: 2, Name: \"Medium\" },\r\n      { ID: 3, Name: \"Low\" },\r\n    ];\r\n    this.ProductType = [\r\n      { ID: 1, Name: \"Product Relq\" },\r\n      { ID: 2, Name: \"Inquiry\" },\r\n      { ID: 3, Name: \"Feedback\" },\r\n    ];\r\n    this.AnswerResult = [\r\n      { ID: 1, Name: \"Poor\" },\r\n      { ID: 2, Name: \"Fair\" },\r\n      { ID: 3, Name: \"Good\" },\r\n      { ID: 4, Name: \"Better\" },\r\n      { ID: 5, Name: \"Best\" },\r\n    ];\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.onInitializeForm();\r\n  };\r\n\r\n  onInitializeForm = () => {\r\n    this.setState({ LoadPanelVisible: true }, () => {\r\n      axios\r\n        .all([\r\n          axios.get(\"/api/number-series-lookup-by-module\", {\r\n            params: { DocumentID: this.state.DocumentID },\r\n          }),\r\n          axios.get(\"/api/area-lookup\"),\r\n          axios.get(\"/api/user-lookup\"),\r\n          axios.get(\"/api/customer\"),\r\n          axios.get(\"/api/category\"),\r\n          axios.get(\"/api/bank-active\"),\r\n          axios.get(\"/api/Item\"),\r\n          axios.get(\"/api/master/list-defect-types\"),\r\n        ])\r\n        .then(\r\n          axios.spread(\r\n            (req, area, user, Customer, Category, Bank, Item, defectTypes) => {\r\n              this.setState(\r\n                (prevState) => ({\r\n                  jComplain: {\r\n                    ...prevState.jComplain,\r\n                    ComplainNo: req.data[0].Series,\r\n                  },\r\n                  jlArea: area.data,\r\n                  jlUser: user.data,\r\n                  jlBank: Bank.data,\r\n                  jlCustomers: Customer.data,\r\n                  jlCategory: Category.data,\r\n                  jlItem: Item.data,\r\n                  jlDefectTypes: defectTypes.data,\r\n                }),\r\n                () => this.setState({ LoadPanelVisible: false })\r\n              );\r\n            }\r\n          )\r\n        )\r\n        .catch((error) => console.error(error));\r\n    });\r\n  };\r\n\r\n  onViewListClick = (viewListSelectedID) => {\r\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {\r\n      if (this.state.ListViewing) {\r\n        //Open\r\n        this.serverRequest = axios\r\n          .get(\"/api/feedback/listview-complain-inquiry\")\r\n          .then((res) => {\r\n            this.setState({ ComplainInquiryList: res.data });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n      if (!this.state.ListViewing && viewListSelectedID != 0) {\r\n        //Close\r\n        this.setState(\r\n          {\r\n            SelectedID: viewListSelectedID,\r\n            DataLoading: true,\r\n            isDocReadOnly: true,\r\n          },\r\n          () => this.OnLoadData()\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  // OnLoadData = () => {\r\n  //   try {\r\n  //     axios\r\n  //       .get(\"/api/feedback/get-complain-inquiry\", {\r\n  //         params: {\r\n  //           AutoID: this.state.SelectedID,\r\n  //         },\r\n  //       })\r\n  //       .then((res) => {\r\n  //         console.log(res.data[0]);\r\n  //         this.setState({\r\n  //           ComplainID: this.state.ComplainID,\r\n  //           jComplain: JSON.parse(res.data[0].ComplainOInquiry),\r\n  //           jComplainAttachment: JSON.parse(\r\n  //             res.data[0].ComplainOInquiryAttachments\r\n  //           ),\r\n  //           jComplainAction: JSON.parse(res.data[0].ComplainOInquiryActionLog),\r\n  //         });\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  onSaveClick = (e) => {\r\n    try {\r\n      axios\r\n        .post(\"/api/feedback/add-complain-inquiry\", {\r\n          ComplainOInquiry: JSON.stringify(this.state.jComplain),\r\n          ComplainOInquiryAttachments: JSON.stringify(\r\n            this.state.jComplainAttachment\r\n          ),\r\n          ComplainOInquiryActionLog: JSON.stringify(this.state.jComplainAction),\r\n        })\r\n        .then((response) => {\r\n          let _newComplainID = response.data[0].NewComplainID;\r\n          if (_newComplainID != 0) {\r\n            this.onLoadPanelHiding(\"Successfully Saved\", \"success\");\r\n            this.OnClearForm();\r\n          } else if (_newComplainID == 0) {\r\n            this.onLoadPanelHiding(\"Successfully Updated\", \"success\");\r\n            this.OnClearForm();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          this.onLoadPanelHiding(\"Something went wrong\", \"error\");\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  OnClearForm = () => {\r\n    this.setState({\r\n      ComplainID: 0,\r\n      jComplain: {},\r\n      jComplainAction: [],\r\n      jComplainAttachment: [],\r\n    });\r\n    this.onInitializeForm();\r\n  };\r\n\r\n  onClearClick = (e) => {\r\n    try {\r\n      this.OnClearForm();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  onLoadPanelHiding = (message, type) => {\r\n    this.setState({\r\n      LoadPanelVisible: false,\r\n    });\r\n\r\n    this.OnNotification(message, type);\r\n  };\r\n\r\n  OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  onChangeCategory = (e) => {\r\n    if (e.value) {\r\n      axios\r\n        .get(\"/api/category-wise-item\", {\r\n          params: {\r\n            CategoryID: e.value,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.setState({ jlItem: res.data });\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  onChangeComplainType = (e) => {\r\n    this.setState({}); // don't remove this line\r\n  };\r\n\r\n  onCustomerChanged = (e) => {\r\n    if (e.value) {\r\n      axios\r\n        .get(\"/api/master/customer-by-id\", {\r\n          params: {\r\n            CustomerID: e.value,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          let _complaint = this.state.jComplain;\r\n          let _modifiedObj = {\r\n            ..._complaint,\r\n            CustomerID: res.data[0].CustomerID,\r\n            RegistrationNumber: res.data[0].RegistrationNo,\r\n            CustomerName: res.data[0].Name,\r\n            CusIdentificationNo: res.data[0].IdentificationNo,\r\n            CusEmail: res.data[0].Email,\r\n            CusContactNo: res.data[0].ContactNo,\r\n          };\r\n\r\n          this.setState({ jComplain: _modifiedObj });\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  onUploadUploadAttchmentClick = (e, fileName, filePath, attachmentID) => {\r\n    try {\r\n      let Id = 0;\r\n      this.setState({ UploadAttchment: !this.state.UploadAttchment }, () => {\r\n        if (this.state.UploadAttchment) {\r\n          Id = e.row.data.AttachmentID;\r\n\r\n          this.setState({\r\n            FileInfo: e.row.data,\r\n          });\r\n        }\r\n        let attachmentName = fileName + \"\";\r\n        let attachmentCount = 0;\r\n        if (!this.state.ListViewing) {\r\n          const attachmentLength = this.state.jComplainAttachment.length;\r\n\r\n          for (var i = 0; i < attachmentLength; i++) {\r\n            if (\r\n              this.state.jComplainAttachment[i].AttachmentID == attachmentID\r\n            ) {\r\n              attachmentCount = i;\r\n            }\r\n          }\r\n          debugger;\r\n          this.state.jComplainAttachment[attachmentCount].AttachmentFilePath =\r\n            filePath + \"\";\r\n          this.state.jComplainAttachment[attachmentCount].AttachmentName =\r\n            attachmentName;\r\n          this.setState((prevState) => ({\r\n            jComplainAttachment: this.state.jComplainAttachment,\r\n          }));\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title=\"Complain/ Inquiry\">\r\n          <Form\r\n            onContentReady={this.validateForm}\r\n            ref={this.FormRef}\r\n            formData={this.state.jComplain}\r\n          >\r\n            <GroupItem caption=\"General Details\" colCount={2}>\r\n              <Item\r\n                dataField=\"PriorityLevel\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.PriorityLevel,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"ComplainType\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.Status,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  onValueChanged: this.onChangeComplainType,\r\n                }}\r\n              ></Item>\r\n              <Item dataField=\"ComplainNo\"></Item>\r\n              <Item\r\n                dataField=\"Status\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.Status01,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                }}\r\n              ></Item>\r\n            </GroupItem>\r\n\r\n            <GroupItem caption=\"Customer Details\" colCount={2}>\r\n              <Item\r\n                dataField=\"CustomerID\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.state.jlCustomers,\r\n                  valueExpr: \"CustomerID\",\r\n                  displayExpr: \"Name\",\r\n                  onValueChanged: this.onCustomerChanged,\r\n                }}\r\n              >\r\n                <Label text=\"Customer\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"RegistrationNumber\"\r\n                editorOptions={{ readOnly: true }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"CustomerName\"\r\n                editorOptions={{ readOnly: true }}\r\n              ></Item>\r\n              <Item dataField=\"Address\" editorOptions={{ readOnly: true }}>\r\n                <Label text=\"Address\" />\r\n              </Item>\r\n              {/* <Item\r\n                dataField=\"CusIdentificationNo\"\r\n                editorOptions={{ readOnly: true }}\r\n              >\r\n                <Label text=\"ID No\" />\r\n              </Item> */}\r\n              <Item dataField=\"CusEmail\" editorOptions={{ readOnly: true }}>\r\n                <Label text=\"Email\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"TelephoneNumber\"\r\n                editorOptions={{ readOnly: true }}\r\n              >\r\n                <Label text=\"Telephone Number\" />\r\n              </Item>\r\n              <Item dataField=\"MobileNumber\" editorOptions={{ readOnly: true }}>\r\n                <Label text=\"Mobile Number\" />\r\n              </Item>\r\n            </GroupItem>\r\n\r\n            <GroupItem caption=\"Complain Details\" colCount={2}>\r\n              <Item dataField=\"ComplainDate\" editorType=\"dxDateBox\"></Item>\r\n              <Item dataField=\"ResolvingDate\" editorType=\"dxDateBox\"></Item>\r\n              <Item\r\n                dataField=\"CategoryID\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.state.jlCategory,\r\n                  valueExpr: \"CategoryID\",\r\n                  displayExpr: \"CategoryName\",\r\n                  onValueChanged: this.onChangeCategory,\r\n                }}\r\n              >\r\n                <Label text=\"Product Type\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"ItemID\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.state.jlItem,\r\n                  valueExpr: \"ItemID\",\r\n                  displayExpr: \"Name\",\r\n                }}\r\n              >\r\n                <Label text=\"Product Name\" />\r\n              </Item>\r\n              <Item dataField=\"ProductSize\"></Item>\r\n              <Item dataField=\"BatchBarSerialCode\">\r\n                <Label text=\"Batch/Bar/SerialCode\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"DefectTypeID\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.state.jlDefectTypes,\r\n                  valueExpr: \"AutoID\",\r\n                  displayExpr: \"DefectCode\",\r\n                }}\r\n              >\r\n                <Label text=\"Defect/Technical Fault Type\" />\r\n              </Item>\r\n              <Item dataField=\"Quantity\" editorType=\"dxNumberBox\"></Item>\r\n              <Item\r\n                dataField=\"ComplainDetails\"\r\n                colSpan={2}\r\n                editorType=\"dxTextArea\"\r\n              ></Item>\r\n            </GroupItem>\r\n\r\n            <GroupItem\r\n              caption=\"Sales\"\r\n              visible={this.state.jComplain.ComplainType == 3}\r\n            >\r\n              <Item\r\n                dataField=\"ContactabilityOfSalesRepresentative\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"ContactabilityOfSalesRepresentativeRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"SpeedToRespondToAnInquiryOrder\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"\r\n                SpeedToRespondToAnInquiryOrderRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"SubmissionOfPriceQuotationInformationOnTime\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"\r\n                SubmissionOfPriceQuotationInformationOnTimeRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"\r\n                ResponseToChangesOnOrderPlaced\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"\r\n                ResponseToChangesOnOrderPlacedRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"FeedbackGivenOnProcessOfTheOrdersPlaced\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"FeedbackGivenOnProcessOfTheOrdersPlacedRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"\r\n                KnowledgeOfThesalesPersonOnProductsOfferedByTheCompany\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"KnowledgeOfThesalesPersonOnProductsOfferedByTheCompanyRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"\r\n                AbilityToResolveComplaintsEffectivelyOfRepresentative\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"AbilityToResolveComplaintsEffectivelyOfRepresentativeRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n            </GroupItem>\r\n\r\n            <GroupItem\r\n              caption=\"Product\"\r\n              visible={this.state.jComplain.ComplainType == 3}\r\n            >\r\n              <Item\r\n                dataField=\"QualityAndDurabilityOfTheProductSupplied\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"QualityAndDurabilityOfTheProductSuppliedRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"IncidentOfNonConformatiesDefectiveFaced\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"IncidentOfNonConformatiesDefectiveFacedRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"NeatnessOfPackaging\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"NeatnessOfPackagingRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n            </GroupItem>\r\n\r\n            <GroupItem\r\n              caption=\"Delivery\"\r\n              visible={this.state.jComplain.ComplainType == 3}\r\n            >\r\n              <Item\r\n                dataField=\"OnTimeDeliveryOfYourOrders\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"OnTimeDeliveryOfYourOrdersRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"TimeTakenForCompletionOfTheTotalOrderQuantity\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"TimeTakenForCompletionOfTheTotalOrderQuantityRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n            </GroupItem>\r\n\r\n            <GroupItem\r\n              caption=\"Other\"\r\n              visible={this.state.jComplain.ComplainType == 3}\r\n            >\r\n              <Item\r\n                dataField=\"OverallServiceProvidedByTheCompany\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"OverallServiceProvidedByTheCompanyRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"ResponseForSalesReturns\"\r\n                editorType=\"dxRadioGroup\"\r\n                editorOptions={{\r\n                  items: this.AnswerResult,\r\n                  valueExpr: \"ID\",\r\n                  displayExpr: \"Name\",\r\n                  layout: \"horizontal\",\r\n                }}\r\n              ></Item>\r\n              <Item\r\n                dataField=\"ResponseForSalesReturnsRemark\"\r\n                editorType=\"dxTextArea\"\r\n              >\r\n                <Label text=\"Remark\" />\r\n              </Item>\r\n            </GroupItem>\r\n          </Form>\r\n\r\n          <br />\r\n          <Form>\r\n            <GroupItem caption=\"Attachment\" colCount={2}></GroupItem>\r\n          </Form>\r\n          <DataGrid\r\n            id=\"grid-list\"\r\n            keyExpr=\"AttachmentID\"\r\n            showBorders={true}\r\n            wordWrapEnabled={true}\r\n            allowSearch={true}\r\n            selection={{ mode: \"single\" }}\r\n            hoverStateEnabled={true}\r\n            dataSource={this.state.jComplainAttachment}\r\n          >\r\n            <Editing\r\n              mode=\"popup\"\r\n              allowDeleting={true}\r\n              allowAdding={true}\r\n              allowUpdating={true}\r\n              useIcons={true}\r\n            >\r\n              <Popup\r\n                title=\"Add complain/inquiry attachments\"\r\n                showTitle={true}\r\n              ></Popup>\r\n            </Editing>\r\n            <SearchPanel visible={true} />\r\n            <GroupPanel visible={true} />\r\n            <Paging defaultPageSize={6} />\r\n            <Column dataField=\"Name\" />\r\n            <Column\r\n              type=\"buttons\"\r\n              buttons={[\r\n                \"edit\",\r\n                {\r\n                  hint: \"Upload\",\r\n                  icon: \"upload\",\r\n                  visible: true,\r\n                  onClick: this.onUploadUploadAttchmentClick,\r\n                },\r\n                {\r\n                  hint: \"View\",\r\n                  icon: \"download\",\r\n                  onClick: this.onAppViewClick,\r\n                },\r\n                \"delete\",\r\n              ]}\r\n            />\r\n          </DataGrid>\r\n\r\n          <br></br>\r\n          <Form>\r\n            <GroupItem caption=\"Action Log\" colCount={2}></GroupItem>\r\n          </Form>\r\n          <DataGrid\r\n            id=\"grid-list\"\r\n            keyExpr=\"AutoID\"\r\n            showBorders={true}\r\n            wordWrapEnabled={true}\r\n            allowSearch={true}\r\n            selection={{ mode: \"single\" }}\r\n            hoverStateEnabled={true}\r\n            dataSource={this.state.jComplainAction}\r\n          >\r\n            <Editing\r\n              mode=\"popup\"\r\n              allowDeleting={true}\r\n              allowAdding={true}\r\n              allowUpdating={true}\r\n              useIcons={true}\r\n            >\r\n              <Popup title=\"Action Log\" showTitle={true}></Popup>\r\n            </Editing>\r\n            <SearchPanel visible={true} />\r\n            <GroupPanel visible={true} />\r\n            <Paging defaultPageSize={20} />\r\n            <Column dataField=\"UserID\" caption=\"User\">\r\n              {\" \"}\r\n              <Lookup\r\n                dataSource={this.state.jlUser}\r\n                displayExpr=\"FullName\"\r\n                valueExpr=\"Id\"\r\n              />\r\n            </Column>\r\n            <Column dataField=\"Description\" />\r\n            <Column dataField=\"ActionDate\" dataType=\"date\" />\r\n            <Column dataField=\"Remarks\" />\r\n          </DataGrid>\r\n\r\n          <br />\r\n          <Navbar bg=\"light\" variant=\"light\">\r\n            <Button\r\n              variant=\"dark\"\r\n              icon=\"feather icon-layers\"\r\n              onClick={this.onSaveClick}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"dark\"\r\n              icon=\"feather icon-layers\"\r\n              onClick={this.onClearClick}\r\n            >\r\n              Clear\r\n            </Button>\r\n            <Button\r\n              variant=\"dark\"\r\n              icon=\"feather icon-layers\"\r\n              onClick={this.onViewListClick}\r\n            >\r\n              View List\r\n            </Button>\r\n          </Navbar>\r\n        </Card>\r\n\r\n        {/* <LoadPanel\r\n          message=\"Processing.... Please, wait...\"\r\n          shadingColor=\"rgba(0,0,0,0.4)\"\r\n          onHiding={this.onLoadPanelHiding}\r\n          visible={this.state.LoadPanelVisible}\r\n          showIndicator={true}\r\n          shading={true}\r\n          showPane={true}\r\n          closeOnOutsideClick={false}\r\n          width={500}\r\n        /> */}\r\n        <List\r\n          Show={this.state.ListViewing}\r\n          OnHide={this.onViewListClick}\r\n          ComplainInquiryList={this.state.ComplainInquiryList}\r\n        ></List>\r\n\r\n        <UploadAttchment\r\n          ref={this.ReportRef}\r\n          Show={this.state.UploadAttchment}\r\n          OnHide={this.onUploadUploadAttchmentClick}\r\n          FileInfo={this.state.FileInfo}\r\n        ></UploadAttchment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComplainOEnquiry;\r\n\r\n/**\r\n * GET https://localhost:50000/b1s/v1/Activities\r\n * GET https://localhost:50000/b1s/v1/Activities?$select=ActivityCode,CardCode,Notes&$filter=ActivityCode ge 2 &$orderby=ActivityCode&$top=10&$skip=1\r\n * \r\n * POST https://localhost:50000/b1s/v1/Activities\r\n{\r\n    \"ActivityDate\": \"2016-08-30\",\r\n    \"ActivityTime\": \"08:13:00\",\r\n    \"CardCode\": \"C01\",\r\n    \"DocEntry\": \"3\",\r\n    \"DocNum\": \"1\",\r\n    \"DocType\": \"17\",\r\n    \"Duration\": 15,\r\n    \"DurationType\": \"du_Minuts\",\r\n    \"EndDueDate\": \"2016-08-30\",\r\n    \"EndTime\": \"08:28:00\",\r\n    \"Reminder\": \"tYES\",\r\n    \"ReminderPeriod\": 15,\r\n    \"ReminderType\": \"du_Minuts\",\r\n    \"StartDate\": \"2016-08-30\",\r\n    \"StartTime\": \"08:13:00\"\r\n}\r\n */\r\n"],"names":["MainCard","Component","constructor","arguments","state","isOption","this","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","render","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","_jsx","className","children","_jsxs","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Card","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","Collapse","in","Body","Aux","ComplainOEnquiryList","super","onSelectionChanged","e","viewListSelectedID","selectedRowsData","AutoID","onSelectClick","OnHide","onCloseClick","ComplainInquiryList","componentDidMount","console","log","Fragment","Modal","size","show","Show","onHide","backdrop","keyboard","closeButton","DataGrid","dataSource","keyExpr","showBorders","wordWrapEnabled","allowSearch","selection","mode","hoverStateEnabled","SearchPanel","visible","GroupPanel","Paging","defaultPageSize","Column","dataField","Button","variant","icon","ComplainOEnquiry","onInitializeForm","LoadPanelVisible","axios","all","get","params","DocumentID","then","spread","req","area","user","Customer","Category","Bank","defectTypes","jComplain","ComplainNo","data","Series","jlArea","jlUser","jlBank","jlCustomers","jlCategory","jlItem","jlDefectTypes","catch","error","onViewListClick","ListViewing","serverRequest","res","SelectedID","DataLoading","isDocReadOnly","OnLoadData","onSaveClick","post","ComplainOInquiry","JSON","stringify","ComplainOInquiryAttachments","jComplainAttachment","ComplainOInquiryActionLog","jComplainAction","response","_newComplainID","NewComplainID","onLoadPanelHiding","OnClearForm","ComplainID","onClearClick","message","type","OnNotification","notify","displayTime","at","offset","onChangeCategory","value","CategoryID","onChangeComplainType","onCustomerChanged","CustomerID","_modifiedObj","RegistrationNumber","RegistrationNo","CustomerName","Name","CusIdentificationNo","IdentificationNo","CusEmail","Email","CusContactNo","ContactNo","onUploadUploadAttchmentClick","fileName","filePath","attachmentID","Id","UploadAttchment","row","AttachmentID","FileInfo","attachmentName","attachmentCount","attachmentLength","length","i","AttachmentFilePath","AttachmentName","Status","ID","Status01","PriorityLevel","ProductType","AnswerResult","Form","onContentReady","validateForm","ref","FormRef","formData","GroupItem","caption","colCount","editorType","editorOptions","items","valueExpr","displayExpr","onValueChanged","Label","text","readOnly","colSpan","ComplainType","layout","Editing","allowDeleting","allowAdding","allowUpdating","useIcons","Popup","showTitle","buttons","hint","onAppViewClick","Lookup","dataType","Navbar","bg","List","ReportRef"],"sourceRoot":""}