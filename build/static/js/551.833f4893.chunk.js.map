{"version":3,"file":"static/js/551.833f4893.chunk.js","mappings":"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","sources":["App/components/MainCard.js","Forms/Admin/PasswordReset.jsx","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/Navbar.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body>{this.props.children}</Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Form, { Item, Label, RequiredRule } from \"devextreme-react/form\";\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Lookup,\r\n  Scrolling,\r\n  Paging,\r\n  Selection,\r\n  SearchPanel,\r\n} from \"devextreme-react/data-grid\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport { Button, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport Layout from \"../../component/Report/ReportList\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"moment\";\r\nimport DropDownBox from \"devextreme-react/drop-down-box\";\r\n\r\nexport class PasswordRest extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      jPasswordReset: {},\r\n    };\r\n\r\n    this.FormRef = React.createRef();\r\n  }\r\n\r\n  OnClickEvent = (e) => {\r\n    if (this.FormLayout.validate().isValid == true) {\r\n      axios\r\n        .get(\"/api/password-check\", {\r\n          params: {\r\n            CurrentPassword: this.state.jPasswordReset.CurrentPassword,\r\n            UserID:\r\n              this.props.data.user === undefined\r\n                ? this.props.data.data.user.Id\r\n                : this.props.data.user.Id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.data.length > 0) {\r\n            if (\r\n              this.state.jPasswordReset.ConfirmPassword ==\r\n              this.state.jPasswordReset.NewPassword\r\n            ) {\r\n              Swal.fire({\r\n                type: \"info\",\r\n                showCancelButton: true,\r\n                text: \"Do you want to reset your password ?\",\r\n                confirmButtonText: \"Yes\",\r\n                cancelButtonText: \"No\",\r\n                allowOutsideClick: false,\r\n                allowEscapeKey: false,\r\n              }).then((res) => {\r\n                if (res.value) {\r\n                  axios\r\n                    .post(\"/api/password-check\", {\r\n                      NewPassword: this.state.jPasswordReset.NewPassword,\r\n                      UserID:\r\n                        this.props.data.user === undefined\r\n                          ? this.props.data.data.user.Id\r\n                          : this.props.data.user.Id,\r\n                    })\r\n                    .then((res) => {\r\n                      notify({\r\n                        message: \"Password Reset Successfully Completed\",\r\n                        type: \"success\",\r\n                        displayTime: 3000,\r\n                        position: { at: \"top right\", offset: \"50\" },\r\n                      });\r\n                      this.OnClearClickEvent();\r\n                    })\r\n                    .catch((error) => {\r\n                      console.log(error);\r\n                    });\r\n                } else if (res.dismiss == \"cancel\") {\r\n                  //console.log(\"cancel\");\r\n                } else if (res.dismiss == \"esc\") {\r\n                  //console.log(\"cancle\");\r\n                }\r\n              });\r\n            } else {\r\n              notify({\r\n                message: \"Password Not is Match\",\r\n                type: \"error\",\r\n                displayTime: 3000,\r\n                position: { at: \"top right\", offset: \"50\" },\r\n              });\r\n            }\r\n          } else {\r\n            notify({\r\n              message: \"Current Password Not is Match\",\r\n              type: \"error\",\r\n              displayTime: 3000,\r\n              position: { at: \"top right\", offset: \"50\" },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      notify({\r\n        message: \"Fields marked with * are required\",\r\n        type: \"error\",\r\n        displayTime: 3000,\r\n        position: { at: \"top right\", offset: \"50\" },\r\n      });\r\n    }\r\n  };\r\n\r\n  OnClearForm = () => {\r\n    this.setState({\r\n      jPasswordReset: {},\r\n    });\r\n\r\n    this.componentDidMount();\r\n  };\r\n\r\n  onLoadPanelHiding = () => {\r\n    this.setState({\r\n      LoadPanelVisible: false,\r\n    });\r\n\r\n    notify({\r\n      message: \"Successfully Saved\",\r\n      type: \"success\",\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  clearRelatedGrid() {\r\n    this.setState({\r\n      jPasswordReset: {},\r\n    });\r\n  }\r\n\r\n  OnClearClickEvent = () => {\r\n    this.setState({ jPasswordReset: {} });\r\n  };\r\n\r\n  get FormLayout() {\r\n    return this.FormRef.current.instance;\r\n  }\r\n\r\n  OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Card title=\"Password Reset\">\r\n          <Form ref={this.FormRef} formData={this.state.jPasswordReset}>\r\n            <Item\r\n              dataField=\"CurrentPassword\"\r\n              editorOptions={{\r\n                maxLength: 50,\r\n                mode: \"password\",\r\n              }}\r\n            >\r\n              <RequiredRule />\r\n            </Item>\r\n            <Item\r\n              dataField=\"NewPassword\"\r\n              editorOptions={{\r\n                maxLength: 50,\r\n                mode: \"password\",\r\n              }}\r\n            >\r\n              <RequiredRule />\r\n            </Item>\r\n            <Item\r\n              dataField=\"ConfirmPassword\"\r\n              editorOptions={{\r\n                maxLength: 50,\r\n                mode: \"password\",\r\n              }}\r\n            >\r\n              <RequiredRule />\r\n            </Item>\r\n          </Form>\r\n        </Card>\r\n\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={this.OnClickEvent}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={this.OnClearForm}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Navbar>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\n// export default ExamSetup;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.loggedReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PasswordRest);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavbarBrand = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  var Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"bsPrefix\"];\nimport React from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar NavbarCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  return /*#__PURE__*/React.createElement(NavbarContext.Consumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      in: !!(context && context.expanded)\n    }, props), /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      className: bsPrefix\n    }, children));\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"label\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar defaultProps = {\n  label: 'Toggle navigation'\n};\nvar NavbarToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle,\n      expanded = _ref2.expanded;\n\n  var handleClick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed')\n  }), children || /*#__PURE__*/React.createElement(\"span\", {\n    className: bsPrefix + \"-icon\"\n  }));\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;"],"names":["MainCard","Component","constructor","arguments","state","isOption","this","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","render","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","_jsx","className","children","_jsxs","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Card","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","Collapse","in","Body","Aux","PasswordRest","super","_isMounted","OnClickEvent","e","FormLayout","validate","isValid","axios","get","params","CurrentPassword","jPasswordReset","UserID","undefined","data","user","Id","then","res","length","ConfirmPassword","NewPassword","Swal","type","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","value","post","notify","message","displayTime","at","offset","OnClearClickEvent","catch","error","console","log","dismiss","OnClearForm","componentDidMount","onLoadPanelHiding","LoadPanelVisible","OnNotification","FormRef","React","clearRelatedGrid","current","instance","Form","ref","formData","dataField","editorOptions","maxLength","mode","RequiredRule","Navbar","bg","variant","Button","icon","connect","loggedReducer","_excluded","NavbarBrand","_ref","bsPrefix","_objectWithoutPropertiesLoose","useBootstrapPrefix","_extends","classNames","displayName","NavbarCollapse","NavbarContext","Consumer","context","expanded","NavbarToggle","label","_ref$as","_ref2","useContext","onToggle","handleClick","useEventCallback","defaultProps","NavbarText","createWithBsPrefix","_useUncontrolled","useUncontrolled","initialBsPrefix","expand","fixed","sticky","_useUncontrolled$as","_onToggle","onSelect","collapseOnSelect","controlledProps","handleCollapse","useCallback","apply","role","expandClass","navbarContext","useMemo","Provider","SelectableContext","Brand","Text"],"sourceRoot":""}