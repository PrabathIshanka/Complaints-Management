{"version":3,"file":"static/js/598.4fe951aa.chunk.js","mappings":"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","sources":["App/components/MainCard.js","Forms/Admin/UserGroupList.jsx","Forms/Admin/UserGroup.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body>{this.props.children}</Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging\r\n} from \"devextreme-react/data-grid\";\r\nimport axios from \"axios\";\r\n\r\nexport class UserGroupList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      SelectID: 0,\r\n      jList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  onSelectionChanged = (e) => {\r\n    this.setState({ SelectID: e.selectedRowsData[0].AutoID });\r\n  };\r\n\r\n  onSelectClick = (e) => {\r\n    this.props.OnHide(this.state.SelectID);\r\n  };\r\n\r\n  onCloseClick = (e) => {\r\n    this.props.OnHide(0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          size=\"xl\"\r\n          show={this.props.Show}\r\n          onHide={this.onCloseClick}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>List of User Group</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              dataSource={this.props.List}\r\n              keyExpr=\"AutoID\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              onSelectionChanged={this.onSelectionChanged}\r\n            >\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"AutoID\" visible={false} />\r\n              <Column dataField=\"GroupCode\" />\r\n              <Column dataField=\"GroupName\" />\r\n            </DataGrid>\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <Button variant=\"secondary\" onClick={this.onSelectClick}>\r\n              Open\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={this.onCloseClick}\r\n              icon=\"feather icon-layers\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserGroupList;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport Form, {\r\n  Item,\r\n  GroupItem,\r\n  RequiredRule,\r\n  Label,\r\n  PatternRule,\r\n} from \"devextreme-react/form\";\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\";\r\nimport List from \"./UserGroupList\";\r\nimport { TreeList, Editing, Column, Lookup } from \"devextreme-react/tree-list\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport { SelectBox, TagBox } from \"devextreme-react\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class UsersGroup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      GroupID: 0,\r\n      Group: { Status: 1 },\r\n      Authorization: [],\r\n\r\n      jlGroupList: [],\r\n\r\n      ListViewing: false,\r\n      DocReadOnly: false,\r\n    };\r\n\r\n    this.Auth = [\r\n      { ID: 0, Name: \"Full Authorization\" },\r\n      { ID: 1, Name: \"Read-Only\" },\r\n      { ID: 2, Name: \"No Authorization\" },\r\n      { ID: 9, Name: \"Various Authorization\" },\r\n    ];\r\n\r\n    this.Status = [\r\n      { ID: 1, Name: \"Active\" },\r\n      { ID: 0, Name: \"Inactive\" },\r\n    ];\r\n\r\n    this.onLoadPanelHiding = this.onLoadPanelHiding.bind(this);\r\n    this.SaveData = this.SaveData.bind(this);\r\n    this.FormRef = React.createRef();\r\n  }\r\n\r\n  get FormLayout() {\r\n    return this.FormRef.current.instance;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    axios\r\n      .all([axios.get(\"/api/user-auth-tree\")])\r\n      .then(\r\n        axios.spread((User) => {\r\n          this.setState({\r\n            Authorization: User.data,\r\n            DocReadOnly: false,\r\n          });\r\n        })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  IDValidation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\"/api/user-group-exist\", {\r\n          params: {\r\n            AutoID: this.state.GroupID,\r\n            Code: this.state.Group.GroupCode,\r\n            Name: this.state.Group.GroupName,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          resolve(res.data[0].Exist === 1);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  OnSaveValidation = async () => {\r\n    if (!this.FormLayout.validate().isValid) {\r\n      this.OnNotification(\"Fields marked with * are required\", \"error\");\r\n      return false;\r\n    } else if (await this.IDValidation()) {\r\n      this.OnNotification(\"Code or Name already exist\", \"error\");\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  onLoadPanelHiding = (message, type) => {\r\n    this.setState({\r\n      LoadPanelVisible: false,\r\n    });\r\n\r\n    this.OnNotification(message, type);\r\n  };\r\n\r\n  OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  OnClickEvent = () => { };\r\n\r\n  SaveData = async () => {\r\n    if (await this.OnSaveValidation()) {\r\n      Swal.fire({\r\n        type: \"info\",\r\n        showCancelButton: true,\r\n        text: \"Do you want to save ?\",\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n      }).then((res) => {\r\n        if (res.value) {\r\n          this.setState(\r\n            { LoadPanelVisible: true },\r\n            () =>\r\n            (this.serverRequest = axios\r\n              .post(\"/api/user-group\", {\r\n                GroupID: this.state.GroupID,\r\n                UserGroup: JSON.stringify(this.state.Group),\r\n                Authorization: JSON.stringify(this.state.Authorization),\r\n              })\r\n              .then((response) => {\r\n                this.onLoadPanelHiding(\"Successfully Saved\", \"success\");\r\n                this.OnClearForm();\r\n              })\r\n              .catch((error) => {\r\n                this.onLoadPanelHiding(\"Something went wrong\", \"error\");\r\n                console.log(error);\r\n              }))\r\n          );\r\n        } else if (res.dismiss == \"cancel\") {\r\n          //console.log(\"cancel\");\r\n        } else if (res.dismiss == \"esc\") {\r\n          //console.log(\"cancel\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  OnClearForm = () => {\r\n    let auth = this.state.Authorization;\r\n\r\n    auth = auth.map((el) => (el.Auth !== 2 ? { ...el, Auth: 2 } : el));\r\n\r\n    this.setState({\r\n      GroupID: 0,\r\n      Group: { Status: 1 },\r\n      Authorization: auth,\r\n    });\r\n  };\r\n\r\n  OnListClickEvent = (SelectID) => {\r\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {\r\n      if (this.state.ListViewing) {\r\n        //Open\r\n        this.serverRequest = axios\r\n          .get(\"/api/user-group-lookup\")\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            this.setState({ jlGroupList: JSON.parse(res.data[0].List) });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n      if (!this.state.ListViewing && SelectID != 0) {\r\n        //Close\r\n        this.setState({ GroupID: SelectID }, () => this.OnLoadData());\r\n      }\r\n    });\r\n  };\r\n\r\n  OnLoadData() {\r\n    axios\r\n      .all([\r\n        axios.get(\"/api/user-group\", {\r\n          params: { GroupID: this.state.GroupID },\r\n        }),\r\n      ])\r\n      .then(\r\n        axios.spread((People) => {\r\n          console.log(\"data view\", People);\r\n          this.setState({\r\n            Group: JSON.parse(People.data[0].UserGroup),\r\n            Authorization: JSON.parse(People.data[0].UserWiseAuthontication),\r\n          });\r\n        })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onRowUpdating = (e) => {\r\n    if (e.newData.Auth === 9) {\r\n      e.cancel = true;\r\n    }\r\n  };\r\n\r\n  onRowUpdated = (e) => {\r\n    let auth = this.state.Authorization;\r\n\r\n    if (e.data.Type === 1) {\r\n      auth = auth.map((el) =>\r\n        el.RootParent === e.data.MenuID || el.ParentID === e.data.MenuID\r\n          ? { ...el, Auth: e.data.Auth }\r\n          : el\r\n      );\r\n    } else {\r\n      let allParentCount = auth.filter(\r\n        (item) => item.ParentID === e.data.ParentID\r\n      );\r\n      let typeParentCount = auth.filter(\r\n        (item) => item.ParentID === e.data.ParentID && item.Auth === e.data.Auth\r\n      );\r\n\r\n      if (allParentCount.length === typeParentCount.length)\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.ParentID ? { ...el, Auth: e.data.Auth } : el\r\n        );\r\n      else\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.ParentID ? { ...el, Auth: 9 } : el\r\n        );\r\n\r\n      //////////////////////////\r\n\r\n      let allRootCount = auth.filter(\r\n        (item) => item.RootParent === e.data.RootParent\r\n      );\r\n      let typeRootCount = auth.filter(\r\n        (item) =>\r\n          item.RootParent === e.data.RootParent && item.Auth === e.data.Auth\r\n      );\r\n\r\n      if (allRootCount.length === typeRootCount.length)\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.RootParent ? { ...el, Auth: e.data.Auth } : el\r\n        );\r\n      else\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.RootParent ? { ...el, Auth: 9 } : el\r\n        );\r\n    }\r\n    this.setState({ Authorization: auth });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Card title=\"User\">\r\n          <Form ref={this.FormRef} formData={this.state.Group}>\r\n            <GroupItem caption=\"User Information\" colCount={2}>\r\n              <Item\r\n                dataField=\"GroupCode\"\r\n                editorOptions={{\r\n                  maxLength: 50,\r\n                  readOnly: this.state.GroupID != 0,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"Group Code\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"GroupName\"\r\n                editorOptions={{\r\n                  maxLength: 100,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"Status\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  searchEnabled: true,\r\n                  items: this.Status,\r\n                  displayExpr: \"Name\",\r\n                  valueExpr: \"ID\",\r\n                }}\r\n              >\r\n                <RequiredRule></RequiredRule>\r\n              </Item>\r\n            </GroupItem>\r\n          </Form>\r\n        </Card>\r\n\r\n        <Card title=\"Authorization\">\r\n          <TreeList\r\n            id=\"user-authorization\"\r\n            dataSource={this.state.Authorization}\r\n            columnAutoWidth={true}\r\n            wordWrapEnabled={true}\r\n            showBorders={true}\r\n            keyExpr=\"MenuID\"\r\n            parentIdExpr=\"ParentID\"\r\n            onRowUpdated={this.onRowUpdated}\r\n            onRowUpdating={this.onRowUpdating}\r\n          >\r\n            <Editing allowUpdating={true} mode=\"cell\" />\r\n            <Column\r\n              minWidth={250}\r\n              dataField=\"Name\"\r\n              caption=\"Module\"\r\n              allowEditing={false}\r\n            >\r\n              <RequiredRule />\r\n            </Column>\r\n            <Column minWidth={120} dataField=\"Auth\" caption=\"Authorization\">\r\n              <Lookup\r\n                dataSource={this.Auth}\r\n                valueExpr=\"ID\"\r\n                displayExpr=\"Name\"\r\n              />\r\n              <RequiredRule />\r\n            </Column>\r\n          </TreeList>\r\n        </Card>\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={this.SaveData}\r\n            disabled={this.state.DocReadOnly}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={this.OnClearForm}\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            variant=\"secondary\"\r\n            icon=\"feather icon-layers\"\r\n            onClick={this.OnListClickEvent}\r\n          >\r\n            View List\r\n          </Button>\r\n        </Navbar>\r\n\r\n        <LoadPanel\r\n          message=\"Processing.... Please, wait...\"\r\n          shadingColor=\"rgba(0,0,0,0.4)\"\r\n          onHiding={this.onLoadPanelHiding}\r\n          visible={this.state.LoadPanelVisible}\r\n          showIndicator={true}\r\n          shading={true}\r\n          showPane={true}\r\n          closeOnOutsideClick={false}\r\n          width={500}\r\n        />\r\n\r\n        <List\r\n          Show={this.state.ListViewing}\r\n          OnHide={this.OnListClickEvent}\r\n          List={this.state.jlGroupList}\r\n        ></List>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.loggedReducer);\r\n  return {\r\n    data: state.loggedReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UsersGroup);\r\n\r\n// export default Users;\r\n"],"names":["MainCard","Component","constructor","arguments","state","isOption","this","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","render","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","_jsx","className","children","_jsxs","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Card","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","Collapse","in","Body","Aux","UserGroupList","super","onSelectionChanged","e","SelectID","selectedRowsData","AutoID","onSelectClick","OnHide","onCloseClick","jList","componentDidMount","Fragment","Modal","size","show","Show","onHide","backdrop","keyboard","closeButton","DataGrid","dataSource","List","keyExpr","showBorders","wordWrapEnabled","allowSearch","selection","mode","hoverStateEnabled","SearchPanel","visible","GroupPanel","Paging","defaultPageSize","Column","dataField","Button","variant","icon","UsersGroup","IDValidation","Promise","resolve","reject","axios","get","params","GroupID","Code","Group","GroupCode","Name","GroupName","then","res","data","Exist","catch","error","console","log","OnSaveValidation","async","FormLayout","validate","isValid","OnNotification","onLoadPanelHiding","message","type","LoadPanelVisible","notify","displayTime","at","offset","OnClickEvent","SaveData","Swal","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","value","serverRequest","post","UserGroup","JSON","stringify","Authorization","response","OnClearForm","dismiss","auth","map","el","Auth","Status","OnListClickEvent","ListViewing","jlGroupList","parse","OnLoadData","onRowUpdating","newData","cancel","onRowUpdated","Type","RootParent","MenuID","ParentID","allParentCount","filter","item","typeParentCount","length","allRootCount","typeRootCount","DocReadOnly","ID","bind","FormRef","React","current","instance","all","spread","User","People","UserWiseAuthontication","Form","ref","formData","GroupItem","caption","colCount","editorOptions","maxLength","readOnly","RequiredRule","Label","editorType","searchEnabled","items","displayExpr","valueExpr","TreeList","columnAutoWidth","parentIdExpr","Editing","allowUpdating","minWidth","allowEditing","Lookup","Navbar","bg","disabled","LoadPanel","shadingColor","onHiding","showIndicator","shading","showPane","closeOnOutsideClick","connect","loggedReducer"],"sourceRoot":""}