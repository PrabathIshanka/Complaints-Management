{"version":3,"file":"static/js/515.f9ef17b9.chunk.js","mappings":"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","sources":["App/components/MainCard.js","Forms/Admin/LayoutSetup.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body>{this.props.children}</Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Lookup,\r\n  GroupPanel,\r\n  SearchPanel,\r\n  Grouping,\r\n  Paging,\r\n} from \"devextreme-react/data-grid\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport List from \"./LayoutUpload\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class LayoutSetup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      jLayoutList: [],\r\n      jlSchool: [],\r\n      jlMainModule: [],\r\n      jlSubModule: [],\r\n\r\n      jLayout: {},\r\n      jLayoutUpdate: false,\r\n      DocReadOnly: false,\r\n    };\r\n\r\n    this.Status = [\r\n      { ID: 1, Name: \"Yes\" },\r\n      { ID: 0, Name: \"No\" },\r\n    ];\r\n\r\n    this.LayoutRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let auth = false;\r\n\r\n    Promise.all([\r\n      axios.get(\"/api/school-lookup\"),\r\n      axios.get(\"/api/module-main\"),\r\n      axios.get(\"/api/module-sub\"),\r\n      axios.get(\"/api/layout-list\"),\r\n    ])\r\n      .then(([School, MainModule, SubModule, LayoutList]) => {\r\n        this.setState({\r\n          jlSchool: School.data,\r\n          jlMainModule: MainModule.data,\r\n          jlSubModule: SubModule.data,\r\n          jLayoutList: JSON.parse(LayoutList.data[0].List),\r\n          DocReadOnly: auth,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onUploadVisible = (e) => {\r\n    return !e.row.isEditing;\r\n  };\r\n\r\n  onUploadClick = (e) => {\r\n    if (!this.state.jLayoutUpdate) {\r\n      this.setState(\r\n        {\r\n          jLayout: e.row.data,\r\n        },\r\n        () => {\r\n          this.LayoutRef.current.onModuleValueChanged({\r\n            value: e.row.data.MainModule,\r\n          });\r\n          this.setState({ jLayoutUpdate: true });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({ jLayout: {}, jLayoutUpdate: false }, () => {\r\n        if (e === 1) {\r\n          axios\r\n            .get(\"/api/layout-list\")\r\n            .then((res) => {\r\n              this.setState({ jLayoutList: JSON.parse(res.data[0].List) });\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  OnToolbarPreparing = (e) => {\r\n    let toolbarItems = e.toolbarOptions.items;\r\n\r\n    toolbarItems.push({\r\n      location: \"after\",\r\n      widget: \"dxButton\",\r\n      options: {\r\n        icon: \"add\",\r\n        onClick: (e) => {\r\n          this.setState({ jLayoutUpdate: !this.state.jLayoutUpdate });\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  onRowRemoved(e) {\r\n    axios\r\n      .delete(`/api/layout/${e.data.AutoID}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axios\r\n      .get(\"/api/file-delete\", {\r\n        params: { Folder: \"layout\", FileName: e.data.FileName },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Card title=\"Layout Setup\">\r\n          <DataGrid\r\n            id=\"grid-layout\"\r\n            keyExpr=\"AutoID\"\r\n            showBorders={true}\r\n            dataSource={this.state.jLayoutList}\r\n            onToolbarPreparing={this.OnToolbarPreparing}\r\n            onRowRemoved={this.onRowRemoved}\r\n          >\r\n            <GroupPanel visible={true} />\r\n            <SearchPanel visible={true} />\r\n            <Grouping autoExpandAll={true} />\r\n            <Paging defaultPageSize={100} />\r\n            <Editing\r\n              mode=\"popup\"\r\n              allowDeleting={!this.state.DocReadOnly}\r\n              useIcons={true}\r\n            >\r\n              <Popup title=\"Layout\" showTitle={true}></Popup>\r\n            </Editing>\r\n\r\n            <Column dataField=\"MainModule\" groupIndex={1}>\r\n              <Lookup\r\n                dataSource={this.state.jlMainModule}\r\n                displayExpr=\"Name\"\r\n                valueExpr=\"ModuleID\"\r\n              />\r\n            </Column>\r\n            <Column dataField=\"SubModule\">\r\n              <Lookup\r\n                dataSource={this.state.jlSubModule}\r\n                displayExpr=\"Name\"\r\n                valueExpr=\"ModuleID\"\r\n              />\r\n            </Column>\r\n            <Column dataField=\"Name\" />\r\n            <Column dataField=\"Status\">\r\n              <Lookup\r\n                dataSource={this.Status}\r\n                displayExpr=\"Name\"\r\n                valueExpr=\"ID\"\r\n              />\r\n            </Column>\r\n            <Column dataField=\"Remark\" />\r\n            <Column\r\n              type=\"buttons\"\r\n              buttons={[\r\n                \"edit\",\r\n                {\r\n                  hint: \"Upload\",\r\n                  icon: \"upload\",\r\n                  visible: this.onUploadVisible || this.state.DocReadOnly,\r\n                  onClick: this.onUploadClick,\r\n                },\r\n                \"delete\",\r\n              ]}\r\n            />\r\n          </DataGrid>\r\n        </Card>\r\n\r\n        <List\r\n          ref={this.LayoutRef}\r\n          Show={this.state.jLayoutUpdate}\r\n          OnHide={this.onUploadClick}\r\n          FileInfo={this.state.jLayout}\r\n          MainModule={this.state.jlMainModule}\r\n          SubModule={this.state.jlSubModule}\r\n          School={this.state.jlSchool}\r\n        ></List>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.loggedReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(LayoutSetup);\r\n"],"names":["MainCard","Component","constructor","arguments","state","isOption","this","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","render","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","_jsx","className","children","_jsxs","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Card","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","Collapse","in","Body","Aux","LayoutSetup","super","onUploadVisible","e","row","isEditing","onUploadClick","jLayoutUpdate","jLayout","axios","get","then","res","jLayoutList","JSON","parse","data","List","catch","error","console","log","LayoutRef","current","onModuleValueChanged","value","MainModule","OnToolbarPreparing","toolbarOptions","items","push","location","widget","options","icon","jlSchool","jlMainModule","jlSubModule","DocReadOnly","Status","ID","Name","React","componentDidMount","Promise","all","_ref","School","SubModule","LayoutList","onRowRemoved","delete","concat","AutoID","response","params","Folder","FileName","Fragment","DataGrid","keyExpr","showBorders","dataSource","onToolbarPreparing","GroupPanel","visible","SearchPanel","Grouping","autoExpandAll","Paging","defaultPageSize","Editing","mode","allowDeleting","useIcons","Popup","showTitle","Column","dataField","groupIndex","Lookup","displayExpr","valueExpr","type","buttons","hint","ref","Show","OnHide","FileInfo","connect","loggedReducer"],"sourceRoot":""}