{"version":3,"file":"static/js/14.6bf004b0.chunk.js","mappings":"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","sources":["Forms/Admin/UserList.jsx","Forms/Admin/Users.jsx"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging,\r\n} from \"devextreme-react/data-grid\";\r\nimport axios from \"axios\";\r\n\r\nexport class UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      SelectID: 0,\r\n      jList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"User\", this.props.UserList);\r\n  }\r\n\r\n  onSelectionChanged = (e) => {\r\n    this.setState({ SelectID: e.selectedRowsData[0].Id });\r\n  };\r\n\r\n  onSelectClick = (e) => {\r\n    this.props.OnHide(this.state.SelectID);\r\n  };\r\n\r\n  onCloseClick = (e) => {\r\n    this.props.OnHide(0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          size=\"xl\"\r\n          show={this.props.Show}\r\n          onHide={this.onCloseClick}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>List of User</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              dataSource={this.props.UserList}\r\n              keyExpr=\"Id\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              onSelectionChanged={this.onSelectionChanged}\r\n            >\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"Id\" visible={false} />\r\n              <Column dataField=\"UserName\" />\r\n              <Column dataField=\"FullName\" />\r\n              <Column dataField=\"Designation\" />\r\n              <Column dataField=\"ContactNo\" />\r\n              <Column dataField=\"Remark\" />\r\n            </DataGrid>\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <Button variant=\"secondary\" onClick={this.onSelectClick}>\r\n              Open\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={this.onCloseClick}\r\n              icon=\"feather icon-layers\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport Form, {\r\n  Item,\r\n  GroupItem,\r\n  RequiredRule,\r\n  EmailRule,\r\n  Label,\r\n  PatternRule,\r\n  EmptyItem,\r\n} from \"devextreme-react/form\";\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\";\r\nimport List from \"./UserList\";\r\nimport { TreeList, Editing, Column, Lookup } from \"devextreme-react/tree-list\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport { SelectBox, TagBox } from \"devextreme-react\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      UserID: 0,\r\n      jUser: { Status: 1 },\r\n      jAuthorization: [],\r\n\r\n      jUserList: [],\r\n\r\n      ListViewing: false,\r\n      DataLoading: false,\r\n      PasswordChange: false,\r\n      DocReadOnly: false,\r\n    };\r\n\r\n    this.Auth = [\r\n      { ID: 0, Name: \"Full Authorization\" },\r\n      { ID: 1, Name: \"Read-Only\" },\r\n      { ID: 2, Name: \"No Authorization\" },\r\n      { ID: 9, Name: \"Various Authorization\" },\r\n    ];\r\n\r\n    this.Status = [\r\n      { ID: 1, Name: \"Active\" },\r\n      { ID: 2, Name: \"Inactive\" },\r\n    ];\r\n\r\n    this.Gender = [\r\n      { ID: \"Male\", Name: \"Male\" },\r\n      { ID: \"Female\", Name: \"Female\" },\r\n    ];\r\n\r\n    this.onLoadPanelHiding = this.onLoadPanelHiding.bind(this);\r\n    this.FormRef = React.createRef();\r\n  }\r\n\r\n  get FormLayout() {\r\n    return this.FormRef.current.instance;\r\n  }\r\n\r\n  componentDidMount = (e) => {\r\n    axios\r\n      .all([\r\n        // axios.get(\"/api/Get-Users-Groups\"),\r\n        // axios.get(\"/api/user-auth-tree\"),\r\n      ])\r\n      .then\r\n      // axios.spread((UserGroup, AuthTree) => {\r\n      //   console.log(\"UserGroup\", UserGroup);\r\n      //   this.setState(\r\n      //     {\r\n      //       jlUserGroup: UserGroup.data,\r\n      //       jAuthorization: AuthTree.data,\r\n      //       DocReadOnly: auth,\r\n      //     },\r\n      //     () => console.log(\"DocReadOnly\", this.state.jAuthorization)\r\n      //   );\r\n      // })\r\n      ()\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  onLoadPanelHiding = (message, type) => {\r\n    this.setState({\r\n      LoadPanelVisible: false,\r\n    });\r\n\r\n    this.OnNotification(message, type);\r\n  };\r\n\r\n  OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  OnClickEvent = () => {};\r\n\r\n  OnSaveValidation = async () => {\r\n    let matchPassword =\r\n      /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\r\n\r\n    if (!this.FormLayout.validate().isValid) {\r\n      this.OnNotification(\"Fields marked with * are required\", \"error\");\r\n      return false;\r\n    }\r\n    console.log(this.state.jUser.password);\r\n    //if (this.state.jUser.PasswordChange) {\r\n    if (\r\n      this.state.jUser.password == \"\" ||\r\n      this.state.jUser.password == NaN ||\r\n      this.state.jUser.password == undefined\r\n    ) {\r\n      this.OnNotification(\"Password is Required\", \"error\");\r\n      return false;\r\n    } else if (matchPassword.test(this.state.jUser.password) == false) {\r\n      this.OnNotification(\r\n        \"Passwords must contain at least 8 characters, including uppercase, lowercase letters and numbers.\",\r\n        \"error\"\r\n      );\r\n      return false;\r\n    } else if (this.state.jUser.password != this.state.jUser.ConfirmPassword) {\r\n      this.OnNotification(\r\n        \"New password & Confirm password must match\",\r\n        \"error\"\r\n      );\r\n      return false;\r\n    }\r\n    // }\r\n\r\n    return true;\r\n  };\r\n\r\n  SaveData = async (e) => {\r\n    if (await this.OnSaveValidation()) {\r\n      Swal.fire({\r\n        type: \"info\",\r\n        showCancelButton: true,\r\n        text: \"Do you want to save ?\",\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n      }).then((res) => {\r\n        if (res.value) {\r\n          this.setState({ LoadPanelVisible: true });\r\n          console.log({\r\n            firstName: this.state.jUser.firstName,\r\n            lastName: this.state.jUser.lastName,\r\n            email: this.state.jUser.email,\r\n            nic: this.state.jUser.nic,\r\n            address: this.state.jUser.address,\r\n            mobileNo: this.state.jUser.mobileNo,\r\n            dob: this.state.jUser.dob,\r\n            gender: this.state.jUser.gender,\r\n            status: this.state.jUser.status,\r\n            type: 1,\r\n            roleId: 2,\r\n          });\r\n          this.serverRequest = axios\r\n            .post(\"http://20.201.121.161:4478/api/User/Register\", {\r\n              firstName: this.state.jUser.firstName,\r\n              lastName: this.state.jUser.lastName,\r\n              email: this.state.jUser.email,\r\n              nic: this.state.jUser.nic,\r\n              address: this.state.jUser.address,\r\n              mobileNo: JSON.stringify(this.state.jUser.mobileNo),\r\n              dob: this.state.jUser.dob,\r\n              gender: this.state.jUser.gender,\r\n              status: this.state.jUser.status,\r\n              type: 1,\r\n              roleId: 2,\r\n            })\r\n            .then((response) => {\r\n              this.onLoadPanelHiding(response.data, \"success\");\r\n              this.OnClearForm();\r\n              //this.setState({CourseID: response.data[0].CourseID});\r\n            })\r\n            .catch((error) => {\r\n              this.onLoadPanelHiding(\"Something went wrong\", \"error\");\r\n              console.log(error);\r\n            });\r\n        } else if (res.dismiss == \"cancel\") {\r\n          //console.log(\"cancel\");\r\n        } else if (res.dismiss == \"esc\") {\r\n          //console.log(\"cancle\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  OnClearForm = () => {\r\n    this.setState({\r\n      UserID: 0,\r\n      jUser: { Status: 1 },\r\n      jAuthorization: [],\r\n\r\n      jUserList: [],\r\n\r\n      ListViewing: false,\r\n      DataLoading: false,\r\n      PasswordChange: false,\r\n      IsCashier: false,\r\n      DocReadOnly: false,\r\n    });\r\n  };\r\n  onValueChanged = (e) => {\r\n    this.state.SelectedSchool = [];\r\n    const newValues = e.value;\r\n    newValues.forEach((element) => {\r\n      this.state.SelectedSchool.push({\r\n        Id: element,\r\n      });\r\n    });\r\n    console.log(this.state.SelectedSchool);\r\n  };\r\n\r\n  OnListClickEvent = (SelectID) => {\r\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {\r\n      if (this.state.ListViewing) {\r\n        //Open\r\n        this.serverRequest = axios\r\n          .get(\"/api/user-lookup\")\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            this.setState({ jUserList: res.data });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n      if (!this.state.ListViewing && SelectID != 0) {\r\n        //Close\r\n        this.setState({ UserID: SelectID }, () => this.OnLoadData());\r\n      }\r\n    });\r\n  };\r\n\r\n  onModuleValueChanged = (e) => {\r\n    if (e.value && !this.state.DataLoading) {\r\n      axios\r\n        .all([\r\n          axios.get(\"/api/user-group\", {\r\n            params: { GroupID: e.value },\r\n          }),\r\n        ])\r\n        .then(\r\n          axios.spread((People) => {\r\n            this.setState({\r\n              jAuthorization: JSON.parse(People.data[0].UserWiseAuthontication),\r\n            });\r\n          })\r\n        )\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  OnLoadData() {\r\n    axios\r\n      .all([\r\n        axios.get(\"/api/user\", {\r\n          params: { UserID: this.state.UserID },\r\n        }),\r\n      ])\r\n      .then(\r\n        axios.spread((User) => {\r\n          this.setState({ DataLoading: true }, () =>\r\n            this.setState(\r\n              {\r\n                jUser: JSON.parse(User.data[0].Users),\r\n                jAuthorization: JSON.parse(User.data[0].UserWiseAuthontication),\r\n                jlCachGLAccount: JSON.parse(User.data[0].CashierAccount),\r\n                PasswordChange: false,\r\n                IsCashier: JSON.parse(User.data[0].Users).Cashier,\r\n              },\r\n              () =>\r\n                this.setState(\r\n                  (prevState) => ({\r\n                    jUser: {\r\n                      ...prevState.jUser,\r\n                      Schools: JSON.parse(User.data[0].UserWiseSchool), //Object.values(User.data[0].UserWiseSchool),\r\n                    },\r\n                  }),\r\n                  () => this.setState({ DataLoading: false })\r\n                )\r\n            )\r\n          );\r\n        })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onChangePassword = (e) => {\r\n    if (e.value && !this.state.DataLoading) {\r\n      this.setState((prevState) => ({\r\n        jUser: {\r\n          ...prevState.jUser,\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n        },\r\n        PasswordChange: e.value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Card title=\"User\">\r\n          <Form ref={this.FormRef} formData={this.state.jUser}>\r\n            <GroupItem caption=\"User Information\" colCount={2}>\r\n              <Item\r\n                dataField=\"firstName\"\r\n                editorOptions={{\r\n                  maxLength: 50,\r\n                  readOnly: this.state.UserID != 0,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"First Name\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"lastName\"\r\n                editorOptions={{\r\n                  maxLength: 50,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"email\"\r\n                editorOptions={{\r\n                  maxLength: 50,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <EmailRule message=\"Email is invalid\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"nic\"\r\n                editorOptions={{\r\n                  maxLength: 12,\r\n                  minLength: 10,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"address\"\r\n                editorOptions={{\r\n                  maxLength: 100,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"mobileNo\"\r\n                editorType=\"dxNumberBox\"\r\n                editorOptions={{\r\n                  maxLength: 12,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item dataField=\"dob\" editorType=\"dxDateBox\">\r\n                <Label text=\"Birthday\" />\r\n\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"gender\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.Gender,\r\n                  searchEnabled: true,\r\n                  displayExpr: \"Name\",\r\n                  valueExpr: \"ID\",\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"Status\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.Status,\r\n                  searchEnabled: true,\r\n                  displayExpr: \"Name\",\r\n                  valueExpr: \"ID\",\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"password\"\r\n                displayFormat=\"#\"\r\n                editorOptions={{\r\n                  mode: \"password\",\r\n                  //readOnly: !this.state.PasswordChange,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"New Password\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"ConfirmPassword\"\r\n                editorOptions={{\r\n                  mode: \"password\",\r\n                  //readOnly: !this.state.PasswordChange,\r\n                }}\r\n              ></Item>\r\n            </GroupItem>\r\n          </Form>\r\n        </Card>\r\n\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={this.SaveData}\r\n            disabled={this.state.DocReadOnly}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={this.OnClearForm}>\r\n            Clear\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={this.OnListClickEvent}>\r\n            View List\r\n          </Button>\r\n        </Navbar>\r\n\r\n        <LoadPanel\r\n          message=\"Processing.... Please, wait...\"\r\n          shadingColor=\"rgba(0,0,0,0.4)\"\r\n          onHiding={this.onLoadPanelHiding}\r\n          visible={this.state.LoadPanelVisible}\r\n          showIndicator={true}\r\n          shading={true}\r\n          showPane={true}\r\n          closeOnOutsideClick={false}\r\n          width={500}\r\n        />\r\n\r\n        <List\r\n          Show={this.state.ListViewing}\r\n          OnHide={this.OnListClickEvent}\r\n          UserList={this.state.jUserList}\r\n        ></List>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.loggedReducer);\r\n  return {\r\n    data: state.loggedReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Users);\r\n\r\n// export default Users;\r\n"],"names":["UserList","Component","constructor","props","super","onSelectionChanged","e","this","setState","SelectID","selectedRowsData","Id","onSelectClick","OnHide","state","onCloseClick","jList","componentDidMount","console","log","render","_jsx","Fragment","children","_jsxs","Modal","size","show","Show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","DataGrid","id","dataSource","keyExpr","showBorders","wordWrapEnabled","allowSearch","selection","mode","hoverStateEnabled","SearchPanel","visible","GroupPanel","Paging","defaultPageSize","Column","dataField","Button","variant","onClick","icon","Users","axios","all","then","catch","error","onLoadPanelHiding","message","type","LoadPanelVisible","OnNotification","notify","displayTime","position","at","offset","OnClickEvent","OnSaveValidation","async","FormLayout","validate","isValid","jUser","password","NaN","undefined","test","ConfirmPassword","SaveData","Swal","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","res","value","firstName","lastName","email","nic","address","mobileNo","dob","gender","status","roleId","serverRequest","post","JSON","stringify","response","data","OnClearForm","dismiss","UserID","Status","jAuthorization","jUserList","ListViewing","DataLoading","PasswordChange","IsCashier","DocReadOnly","onValueChanged","SelectedSchool","forEach","element","push","OnListClickEvent","get","OnLoadData","onModuleValueChanged","params","GroupID","spread","People","parse","UserWiseAuthontication","onChangePassword","prevState","Password","Auth","ID","Name","Gender","bind","FormRef","React","current","instance","User","jlCachGLAccount","CashierAccount","Cashier","Schools","UserWiseSchool","Aux","Card","title","Form","ref","formData","GroupItem","caption","colCount","Item","editorOptions","maxLength","readOnly","RequiredRule","Label","EmailRule","minLength","editorType","items","searchEnabled","displayExpr","valueExpr","displayFormat","Navbar","bg","disabled","LoadPanel","shadingColor","onHiding","showIndicator","shading","showPane","closeOnOutsideClick","width","List","connect","loggedReducer"],"sourceRoot":""}