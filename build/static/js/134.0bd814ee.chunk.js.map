{"version":3,"file":"static/js/134.0bd814ee.chunk.js","mappings":"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","sources":["Forms/Master/EmployeeList.jsx","Forms/Master/Employee.jsx"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DataGrid, {\r\n  Column,\r\n  SearchPanel,\r\n  GroupPanel,\r\n  Paging,\r\n} from \"devextreme-react/data-grid\";\r\nimport axios from \"axios\";\r\n\r\nexport class UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      SelectID: 0,\r\n      jList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"User\", this.props.UserList);\r\n  }\r\n\r\n  onSelectionChanged = (e) => {\r\n    this.setState({ SelectID: e.selectedRowsData[0].Id });\r\n  };\r\n\r\n  onSelectClick = (e) => {\r\n    this.props.OnHide(this.state.SelectID);\r\n  };\r\n\r\n  onCloseClick = (e) => {\r\n    this.props.OnHide(0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          size=\"xl\"\r\n          show={this.props.Show}\r\n          onHide={this.onCloseClick}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>List of User</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <DataGrid\r\n              id=\"grid-list\"\r\n              dataSource={this.props.UserList}\r\n              keyExpr=\"Id\"\r\n              showBorders={true}\r\n              wordWrapEnabled={true}\r\n              allowSearch={true}\r\n              selection={{ mode: \"single\" }}\r\n              hoverStateEnabled={true}\r\n              onSelectionChanged={this.onSelectionChanged}\r\n            >\r\n              <SearchPanel visible={true} />\r\n              <GroupPanel visible={true} />\r\n              <Paging defaultPageSize={20} />\r\n              <Column dataField=\"Id\" visible={false} />\r\n              <Column dataField=\"UserName\" />\r\n              <Column dataField=\"FullName\" />\r\n              <Column dataField=\"Designation\" />\r\n              <Column dataField=\"ContactNo\" />\r\n              <Column dataField=\"Remark\" />\r\n            </DataGrid>\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <Button variant=\"secondary\" onClick={this.onSelectClick}>\r\n              Open\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={this.onCloseClick}\r\n              icon=\"feather icon-layers\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport Form, {\r\n  Item,\r\n  GroupItem,\r\n  RequiredRule,\r\n  Label,\r\n  PatternRule,\r\n  EmptyItem,\r\n  EmailRule,\r\n} from \"devextreme-react/form\";\r\n\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\";\r\nimport List from \"./EmployeeList\";\r\nimport { TreeList, Editing, Column, Lookup } from \"devextreme-react/tree-list\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport { SelectBox, TagBox } from \"devextreme-react\";\r\nimport { LoadPanel } from \"devextreme-react/load-panel\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Employee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      EmployeeID: 0,\r\n      jEmployee: { Status: \"Active\" },\r\n      jRoles: [],\r\n      jBranch: [],\r\n      jAuthorization: [],\r\n\r\n      jEmployeeList: [],\r\n\r\n      ListViewing: false,\r\n      DataLoading: false,\r\n      PasswordChange: false,\r\n      IsCashier: false,\r\n      DocReadOnly: false,\r\n    };\r\n\r\n    this.Status = [\r\n      { ID: \"Active\", Name: \"Active\" },\r\n      { ID: \"Inactive\", Name: \"Inactive\" },\r\n    ];\r\n\r\n    this.Gender = [\r\n      { ID: \"Male\", Name: \"Male\" },\r\n      { ID: \"Female\", Name: \"Female\" },\r\n    ];\r\n    this.Institute = [\r\n      { ID: 0, Name: \"Wildlife conservations\" },\r\n      { ID: 1, Name: \"Forest conservations\" },\r\n    ];\r\n\r\n    this.onLoadPanelHiding = this.onLoadPanelHiding.bind(this);\r\n    this.FormRef = React.createRef();\r\n  }\r\n\r\n  get FormLayout() {\r\n    return this.FormRef.current.instance;\r\n  }\r\n\r\n  componentDidMount = (e) => {\r\n    let auth;\r\n    // if (this.props.data.userWiseAuthorization.length != 0) {\r\n    //   auth ={};\r\n    //    /* this.props.data.userWiseAuthorization.find(\r\n    //       (item) => item.MenuID === 9001\r\n    //     ).Auth === 1;*/\r\n    // };\r\n\r\n    axios\r\n      .all([\r\n        axios.get(\"http://20.201.121.161:4478/api/Role\", {\r\n          headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") },\r\n        }),\r\n        axios.get(\"http://20.201.121.161:4478/api/Branch\", {\r\n          headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") },\r\n        }),\r\n        // axios.get(\"/api/user-auth-tree\"),\r\n      ])\r\n      .then(\r\n        axios.spread((JobRoles, Branch) => {\r\n          console.log(\"jRoles\", JobRoles);\r\n          this.setState(\r\n            {\r\n              jRoles: JobRoles.data,\r\n              jBranch: Branch.data,\r\n            },\r\n            () => console.log(\"jRoles\", this.state.jRoles)\r\n          );\r\n        })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  onLoadPanelHiding = (message, type) => {\r\n    this.setState({\r\n      LoadPanelVisible: false,\r\n    });\r\n\r\n    this.OnNotification(message, type);\r\n  };\r\n\r\n  OnNotification = (message, type) => {\r\n    notify({\r\n      message: message,\r\n      type: type,\r\n      displayTime: 3000,\r\n      position: { at: \"top right\", offset: \"50\" },\r\n    });\r\n  };\r\n\r\n  OnClickEvent = () => {};\r\n\r\n  OnSaveValidation = async () => {\r\n    return true;\r\n  };\r\n\r\n  SaveData = async (e) => {\r\n    if (await this.OnSaveValidation()) {\r\n      Swal.fire({\r\n        type: \"info\",\r\n        showCancelButton: true,\r\n        text: \"Do you want to save ?\",\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n      }).then((res) => {\r\n        if (res.value) {\r\n          this.setState({ LoadPanelVisible: true });\r\n          console.log({\r\n            firstName: this.state.jEmployee.firstName,\r\n            lastName: this.state.jEmployee.lastName,\r\n            email: this.state.jEmployee.email,\r\n            nic: this.state.jEmployee.nic,\r\n            address: this.state.jEmployee.address,\r\n            mobileNo: this.state.jEmployee.mobileNo,\r\n            dob: this.state.jEmployee.dob,\r\n            gender: this.state.jEmployee.gender,\r\n            status: this.state.jEmployee.status,\r\n            type: 0,\r\n            roleId: this.state.jEmployee.roleId,\r\n            branchId: 2,\r\n            designation: this.state.jEmployee.designation,\r\n            changePassword: false,\r\n          });\r\n          this.serverRequest = axios\r\n            .post(\r\n              \"http://20.201.121.161:4478/api/Employee\",\r\n              {\r\n                firstName: this.state.jEmployee.firstName,\r\n                lastName: this.state.jEmployee.lastName,\r\n                email: this.state.jEmployee.email,\r\n                nic: this.state.jEmployee.nic,\r\n                address: this.state.jEmployee.address,\r\n                mobileNo: JSON.stringify(this.state.jEmployee.mobileNo),\r\n                dob: this.state.jEmployee.dob,\r\n                gender: this.state.jEmployee.gender,\r\n                status: this.state.jEmployee.status,\r\n                type: 0,\r\n                roleId: this.state.jEmployee.roleId,\r\n                branchId: 2,\r\n                designation: this.state.jEmployee.designation,\r\n                changePassword: false,\r\n              },\r\n              {\r\n                headers: {\r\n                  Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              this.onLoadPanelHiding(response.data.email, \"success\");\r\n              this.OnClearForm();\r\n              //this.setState({CourseID: response.data[0].CourseID});\r\n            })\r\n            .catch((error) => {\r\n              this.onLoadPanelHiding(\"Something went wrong\", \"error\");\r\n              console.log(\"Error\", error);\r\n            });\r\n        } else if (res.dismiss == \"cancel\") {\r\n          //console.log(\"cancel\");\r\n        } else if (res.dismiss == \"esc\") {\r\n          //console.log(\"cancle\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  OnClearForm = () => {\r\n    console.log(\"cleared\");\r\n    let auth = this.state.jAuthorization;\r\n\r\n    //auth = auth.map((el) => (el.Auth !== 2 ? { ...el, Auth: 2 } : el));\r\n\r\n    this.setState({\r\n      EmployeeID: 0,\r\n      jEmployee: { Status: \"Active\" },\r\n      jRoles: [],\r\n      jAuthorization: [],\r\n\r\n      jEmployeeList: [],\r\n\r\n      ListViewing: false,\r\n      DataLoading: false,\r\n      PasswordChange: false,\r\n      IsCashier: false,\r\n      DocReadOnly: false,\r\n    });\r\n  };\r\n\r\n  onValueChanged = (e) => {\r\n    this.state.SelectedSchool = [];\r\n    const newValues = e.value;\r\n    newValues.forEach((element) => {\r\n      this.state.SelectedSchool.push({\r\n        Id: element,\r\n      });\r\n    });\r\n    console.log(this.state.SelectedSchool);\r\n  };\r\n\r\n  OnListClickEvent = (SelectID) => {\r\n    this.setState({ ListViewing: !this.state.ListViewing }, () => {\r\n      if (this.state.ListViewing) {\r\n        //Open\r\n        this.serverRequest = axios\r\n          .get(\"/api/user-lookup\")\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            this.setState({ jUserList: res.data });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n      if (!this.state.ListViewing && SelectID != 0) {\r\n        //Close\r\n        this.setState({ UserID: SelectID }, () => this.OnLoadData());\r\n      }\r\n    });\r\n  };\r\n\r\n  OnLoadData() {\r\n    axios\r\n      .all([\r\n        axios.get(\"/api/user\", {\r\n          params: { UserID: this.state.UserID },\r\n        }),\r\n      ])\r\n      .then(\r\n        axios.spread((User) => {\r\n          console.log(\"User\", User);\r\n          this.setState({ DataLoading: true }, () =>\r\n            this.setState({\r\n              jlUserGroup: this.getUserGroup(\r\n                JSON.parse(User.data[0].Users).GroupID\r\n              ),\r\n              jUser: JSON.parse(User.data[0].Users),\r\n              jAuthorization: JSON.parse(User.data[0].UserWiseAuthontication),\r\n              //jlCachGLAccount: JSON.parse(User.data[0].CashierAccount),\r\n              PasswordChange: false,\r\n              //IsCashier: JSON.parse(User.data[0].Users).Cashier,\r\n              //jlUserGroup:JSON.parse(User.data[0].UserGroup)\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  onRowUpdating = (e) => {\r\n    if (e.newData.Auth === 9) {\r\n      e.cancel = true;\r\n    }\r\n  };\r\n\r\n  onRowUpdated = (e) => {\r\n    let auth = this.state.jAuthorization;\r\n\r\n    if (e.data.Type === 1) {\r\n      auth = auth.map((el) =>\r\n        el.RootParent === e.data.MenuID || el.ParentID === e.data.MenuID\r\n          ? { ...el, Auth: e.data.Auth }\r\n          : el\r\n      );\r\n    } else {\r\n      let allParentCount = auth.filter(\r\n        (item) => item.ParentID === e.data.ParentID\r\n      );\r\n      let typeParentCount = auth.filter(\r\n        (item) => item.ParentID === e.data.ParentID && item.Auth === e.data.Auth\r\n      );\r\n\r\n      if (allParentCount.length === typeParentCount.length)\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.ParentID ? { ...el, Auth: e.data.Auth } : el\r\n        );\r\n      else\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.ParentID ? { ...el, Auth: 9 } : el\r\n        );\r\n\r\n      /////////////////////////\r\n\r\n      let allRootCount = auth.filter(\r\n        (item) => item.RootParent === e.data.RootParent\r\n      );\r\n      let typeRootCount = auth.filter(\r\n        (item) =>\r\n          item.RootParent === e.data.RootParent && item.Auth === e.data.Auth\r\n      );\r\n\r\n      if (allRootCount.length === typeRootCount.length)\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.RootParent ? { ...el, Auth: e.data.Auth } : el\r\n        );\r\n      else\r\n        auth = auth.map((el) =>\r\n          el.MenuID === e.data.RootParent ? { ...el, Auth: 9 } : el\r\n        );\r\n    }\r\n\r\n    this.setState({ jAuthorization: auth });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Card title=\"Employee\">\r\n          <Form ref={this.FormRef} formData={this.state.jEmployee}>\r\n            <GroupItem caption=\"Employee Information\" colCount={2}>\r\n              <Item\r\n                dataField=\"firstName\"\r\n                editorOptions={{\r\n                  maxLength: 50,\r\n                  readOnly: this.state.EmployeeID != 0,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <Label text=\"First Name\"></Label>\r\n              </Item>\r\n              <Item\r\n                dataField=\"lastName\"\r\n                editorOptions={{\r\n                  maxLength: 50,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"email\"\r\n                editorOptions={{\r\n                  maxLength: 50,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n                <EmailRule message=\"Email is invalid\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"nic\"\r\n                editorOptions={{\r\n                  maxLength: 12,\r\n                  minLength: 10,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"address\"\r\n                editorOptions={{\r\n                  maxLength: 100,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"mobileNo\"\r\n                editorType=\"dxNumberBox\"\r\n                editorOptions={{\r\n                  maxLength: 12,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item dataField=\"dob\" editorType=\"dxDateBox\">\r\n                <Label text=\"Birthday\" />\r\n\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"gender\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.Gender,\r\n                  searchEnabled: true,\r\n                  displayExpr: \"Name\",\r\n                  valueExpr: \"ID\",\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"roleId\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.state.jRoles,\r\n                  searchEnabled: true,\r\n                  displayExpr: \"name\",\r\n                  valueExpr: \"id\",\r\n                }}\r\n              >\r\n                <Label text=\"Job Role\" />\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"branchId\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.state.jBranch,\r\n                  searchEnabled: true,\r\n                  displayExpr: \"name\",\r\n                  valueExpr: \"id\",\r\n                }}\r\n              >\r\n                <Label text=\"Branch\" />\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n\r\n              <Item\r\n                dataField=\"designation\"\r\n                editorOptions={{\r\n                  maxLength: 100,\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n              <Item\r\n                dataField=\"status\"\r\n                editorType=\"dxSelectBox\"\r\n                editorOptions={{\r\n                  items: this.Status,\r\n                  searchEnabled: true,\r\n                  displayExpr: \"Name\",\r\n                  valueExpr: \"ID\",\r\n                }}\r\n              >\r\n                <RequiredRule message=\"Field required\" />\r\n              </Item>\r\n            </GroupItem>\r\n          </Form>\r\n        </Card>\r\n\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={this.SaveData}\r\n            disabled={this.state.DocReadOnly} //\r\n          >\r\n            Save\r\n          </Button>\r\n\r\n          <Button variant=\"secondary\" onClick={this.OnClearForm}>\r\n            Clear\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={this.OnListClickEvent}>\r\n            View List\r\n          </Button>\r\n        </Navbar>\r\n\r\n        <LoadPanel\r\n          message=\"Processing.... Please, wait...\"\r\n          shadingColor=\"rgba(0,0,0,0.4)\"\r\n          onHiding={this.onLoadPanelHiding}\r\n          visible={this.state.LoadPanelVisible}\r\n          showIndicator={true}\r\n          shading={true}\r\n          showPane={true}\r\n          closeOnOutsideClick={false}\r\n          width={500}\r\n        />\r\n\r\n        <List\r\n          Show={this.state.ListViewing}\r\n          OnHide={this.OnListClickEvent}\r\n          UserList={this.state.jEmployeeList}\r\n        ></List>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.loggedReducer);\r\n  return {\r\n    data: state.loggedReducer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Employee);\r\n\r\n//export default Users;\r\n"],"names":["UserList","Component","constructor","props","super","onSelectionChanged","e","this","setState","SelectID","selectedRowsData","Id","onSelectClick","OnHide","state","onCloseClick","jList","componentDidMount","console","log","render","_jsx","Fragment","children","_jsxs","Modal","size","show","Show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","DataGrid","id","dataSource","keyExpr","showBorders","wordWrapEnabled","allowSearch","selection","mode","hoverStateEnabled","SearchPanel","visible","GroupPanel","Paging","defaultPageSize","Column","dataField","Button","variant","onClick","icon","Employee","axios","all","get","headers","Authorization","localStorage","getItem","then","spread","JobRoles","Branch","jRoles","data","jBranch","catch","error","onLoadPanelHiding","message","type","LoadPanelVisible","OnNotification","notify","displayTime","position","at","offset","OnClickEvent","OnSaveValidation","async","SaveData","Swal","showCancelButton","text","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","res","value","firstName","jEmployee","lastName","email","nic","address","mobileNo","dob","gender","status","roleId","branchId","designation","changePassword","serverRequest","post","JSON","stringify","response","OnClearForm","dismiss","jAuthorization","EmployeeID","Status","jEmployeeList","ListViewing","DataLoading","PasswordChange","IsCashier","DocReadOnly","onValueChanged","SelectedSchool","forEach","element","push","OnListClickEvent","jUserList","UserID","OnLoadData","onRowUpdating","newData","Auth","cancel","onRowUpdated","auth","Type","map","el","RootParent","MenuID","ParentID","allParentCount","filter","item","typeParentCount","length","allRootCount","typeRootCount","ID","Name","Gender","Institute","bind","FormRef","React","FormLayout","current","instance","params","User","jlUserGroup","getUserGroup","parse","Users","GroupID","jUser","UserWiseAuthontication","Aux","Card","title","Form","ref","formData","GroupItem","caption","colCount","Item","editorOptions","maxLength","readOnly","RequiredRule","Label","EmailRule","minLength","editorType","items","searchEnabled","displayExpr","valueExpr","Navbar","bg","disabled","LoadPanel","shadingColor","onHiding","showIndicator","shading","showPane","closeOnOutsideClick","width","List","connect","loggedReducer"],"sourceRoot":""}