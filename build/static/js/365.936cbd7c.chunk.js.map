{"version":3,"file":"static/js/365.936cbd7c.chunk.js","mappings":"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","sources":["App/components/MainCard.js","Forms/Master/Role.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n    fullCard: false,\r\n    collapseCard: false,\r\n    loadCard: false,\r\n    cardRemove: false,\r\n  };\r\n\r\n  cardReloadHandler = () => {\r\n    this.setState({ loadCard: true });\r\n    setInterval(() => {\r\n      this.setState({ loadCard: false });\r\n    }, 3000);\r\n  };\r\n\r\n  cardRemoveHandler = () => {\r\n    this.setState({ cardRemove: true });\r\n  };\r\n\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard\r\n                      ? \"feather icon-minimize\"\r\n                      : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.fullCard ? \"Restore\" : \"Maximize\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.collapseCard\r\n                      ? \"feather icon-plus\"\r\n                      : \"feather icon-minus\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}>\r\n                  {\" \"}\r\n                  {this.state.collapseCard ? \"Expand\" : \"Collapse\"}{\" \"}\r\n                </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardReloadHandler}\r\n              >\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={this.cardRemoveHandler}\r\n              >\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body>{this.props.children}</Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default MainCard;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DataGrid, {\r\n    Column,\r\n    Editing,\r\n    SearchPanel,\r\n    RequiredRule,\r\n    Popup,\r\n    Lookup,\r\n} from \"devextreme-react/data-grid\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport axios from \"axios\";\r\nimport { confirm } from \"devextreme/ui/dialog\";\r\nimport { connect } from \"react-redux\";\r\nimport notify from \"devextreme/ui/notify\";\r\n\r\nexport class Role extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            jRole:[],\r\n            DocReadOnly: false,\r\n        };\r\n\r\n        this.CanView = [\r\n            { ID: true, Name: \"true\" },\r\n            { ID: false, Name: \"false\" },\r\n        ];\r\n\r\n        this.CanEdit = [\r\n            { ID: true, Name: \"true\" },\r\n            { ID: false, Name: \"false\" },\r\n        ];\r\n\r\n        this.CanDelete = [\r\n            { ID: true, Name: \"true\" },\r\n            { ID: false, Name: \"false\" },\r\n        ];\r\n\r\n        this.Institute = [\r\n            { ID: 0, Name: \"Wildlife conservations\" },\r\n            { ID: 1, Name: \"Forest conservations\" },\r\n        ];\r\n\r\n        this.ValidationCheck = false;\r\n\r\n        this.onRowInserted = this.onRowInserted.bind(this);\r\n        this.onRowUpdated = this.onRowUpdated.bind(this);\r\n        this.onRowRemoved = this.onRowRemoved.bind(this);\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        let auth;\r\n        \r\n        axios\r\n          .all([\r\n             axios.get(\"http://20.201.121.161:4478/api/Role\",{headers:{Authorization : (\"Bearer \"+localStorage.getItem(\"token\"))}}),\r\n          ])\r\n          .then(\r\n          axios.spread((City) => {\r\n            this.setState(\r\n              {\r\n                jCity : City.data,\r\n              }\r\n            );\r\n          }))\r\n          .catch((error) => console.log(error));\r\n        \r\n      };\r\n\r\n    onRowInserted(e) {console.log(e.data);\r\n        this.serverRequest = axios\r\n            .post(\"http://20.201.121.161:4478/api/Role\", e.data,{headers:{Authorization : (\"Bearer \"+localStorage.getItem(\"token\"))}})\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onRowUpdated(e) {\r\n        this.serverRequest = axios\r\n            .put(\"/api/sub-master/update-defect-types\", e.data)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onRowRemoved(e) {\r\n        this.serverRequest = axios\r\n            .delete(`/api/sub-master/remove-defect-types/${e.data.AutoID}`)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    onIDValidation = (e) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios\r\n                .get(\"/api/sub-master/defect-type-exist\", {\r\n                    params: {\r\n                        AutoID: e.newData.AutoID ? e.newData.AutoID : 0,\r\n                        Code: e.newData.MSCode,\r\n                        Name: e.newData.MSName,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    resolve(res.data[0].Exist === 1);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    onRowValidating = async (e) => {\r\n        if (e.isValid) {\r\n            if (this.ValidationCheck) {\r\n                e.isValid = true;\r\n                this.ValidationCheck = false;\r\n                return;\r\n            } else e.isValid = false;\r\n\r\n            if (await this.onIDValidation(e)) {\r\n                e.isValid = false;\r\n                this.OnNotification(\"Code or Name already exists\", \"error\");\r\n                return;\r\n            }\r\n\r\n            confirm(\"Want to save this record?\", \"Confirmation\").done(\r\n                (dialogResult) => {\r\n                    if (dialogResult) {\r\n                        this.ValidationCheck = true;\r\n                        e.component.saveEditData();\r\n                    } else {\r\n                        e.component.cancelEditData();\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onInitNewRow(e) {\r\n        e.data.Status = 1;\r\n    }\r\n\r\n    OnNotification = (message, type) => {\r\n        notify({\r\n            message: message,\r\n            type: type,\r\n            displayTime: 3000,\r\n            position: { at: \"top right\", offset: \"50\" },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Card title=\"Role\">\r\n                    <DataGrid\r\n                        id=\"grid-defect-types\"\r\n                        keyExpr=\"id\"\r\n                        dataSource={this.state.jCity}\r\n                        allowColumnReordering={true}\r\n                        onRowInserted={this.onRowInserted}\r\n                        onRowUpdated={this.onRowUpdated}\r\n                        onRowRemoved={this.onRowRemoved}\r\n                        //onRowValidating={this.onRowValidating}\r\n                        onInitNewRow={this.onInitNewRow}\r\n                        showBorders={true}\r\n                        wordWrapEnabled={true}\r\n                        allowSearch={true}\r\n                        showColumnLines={true}\r\n                        showRowLines={false}\r\n                        rowAlternationEnabled={true}\r\n                    >\r\n                        <Editing\r\n                            mode=\"popup\"\r\n                            useIcons={true}\r\n                            allowUpdating={!this.state.DocReadOnly}\r\n                            allowDeleting={!this.state.DocReadOnly}\r\n                            allowAdding={!this.state.DocReadOnly}\r\n                        >\r\n                            <Popup\r\n                                title=\"Role\"\r\n                                showTitle={true}\r\n                            ></Popup>\r\n                        </Editing>\r\n                        <SearchPanel visible={true} placeholder=\"Search...\" />\r\n                        <Column\r\n                            dataField=\"id\"\r\n                            editorOptions={{\r\n                                maxLength: 50,\r\n                            }}\r\n                        >\r\n                        </Column>\r\n                        <Column\r\n                            dataField=\"name\"\r\n                            editorOptions={{\r\n                                maxLength: 50,\r\n                            }}\r\n                        >\r\n                            <RequiredRule />\r\n                        </Column>\r\n                        <Column dataField=\"institutionId\">\r\n                            <Lookup\r\n                                dataSource={this.Institute}\r\n                                valueExpr=\"ID\"\r\n                                displayExpr=\"Name\"\r\n                            />\r\n                            <RequiredRule />\r\n                        </Column>\r\n                        <Column dataField=\"canView\">\r\n                            <Lookup\r\n                                dataSource={this.CanView}\r\n                                valueExpr=\"ID\"\r\n                                displayExpr=\"Name\"\r\n                            />\r\n                            <RequiredRule />\r\n                        </Column>\r\n                        <Column dataField=\"canEdit\">\r\n                            <Lookup\r\n                                dataSource={this.CanEdit}\r\n                                valueExpr=\"ID\"\r\n                                displayExpr=\"Name\"\r\n                            />\r\n                            <RequiredRule />\r\n                        </Column>\r\n                        <Column dataField=\"canDelete\">\r\n                            <Lookup\r\n                                dataSource={this.CanDelete}\r\n                                valueExpr=\"ID\"\r\n                                displayExpr=\"Name\"\r\n                            />\r\n                            <RequiredRule />\r\n                        </Column>\r\n                       \r\n                    </DataGrid>\r\n                </Card>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.loggedReducer);\r\n    return {\r\n        data: state.loggedReducer,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Role);"],"names":["MainCard","Component","constructor","arguments","state","isOption","this","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","render","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","_jsx","className","children","_jsxs","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Card","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","Collapse","in","Body","Aux","Role","super","componentDidMount","e","axios","all","get","headers","Authorization","localStorage","getItem","then","spread","City","jCity","data","catch","error","console","log","onIDValidation","Promise","resolve","reject","params","AutoID","newData","Code","MSCode","Name","MSName","res","Exist","onRowValidating","async","isValid","ValidationCheck","OnNotification","confirm","done","dialogResult","component","saveEditData","cancelEditData","message","type","notify","displayTime","at","offset","jRole","DocReadOnly","CanView","ID","CanEdit","CanDelete","Institute","onRowInserted","bind","onRowUpdated","onRowRemoved","serverRequest","post","response","put","delete","concat","onInitNewRow","Status","DataGrid","keyExpr","dataSource","allowColumnReordering","showBorders","wordWrapEnabled","allowSearch","showColumnLines","showRowLines","rowAlternationEnabled","Editing","mode","useIcons","allowUpdating","allowDeleting","allowAdding","Popup","showTitle","SearchPanel","visible","placeholder","Column","dataField","editorOptions","maxLength","RequiredRule","Lookup","valueExpr","displayExpr","connect","loggedReducer"],"sourceRoot":""}